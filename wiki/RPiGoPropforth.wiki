#summary Setting Up Raspberry Pi for GO and PROPFORTH
#labels RPi,RaspberryPi
= Introduction =

Raspberry Pi is the BASELINE platform LINUX installation for the propforth build and regression test automation. 

This system will also serve as the basis for a workstation OS node in multiprop configurations.

Even if you don't want to do automated kernel builds and or automated regression testing, you still want to stet this up.  This is what turns a couple microcontrollers into .... something interesting.

= set up =

These notes are taken from Sal's dokuwiki raspberry pi notes and are subject to change.  Report any errors and I'll try to fix 'em.

== Install RASPIAN on Raspberry Pi SD ==

These images were tested and worked

[http://downloads.raspberrypi.org/download.php?file=/images/raspbian/2012-07-15-wheezy-raspbian/2012-07-15-wheezy-raspbian.zip 2012-07-15-wheezy-raspbian.zip]

The 7-15 worked, the newer one 8-16 gave me some problems:

`[http://downloads.raspberrypi.org/images/raspbian/2012-08-16-wheezy-raspbian/2012-08-16-wheezy-raspbian.zip 2012-08-16-wheezy-raspbian.zip]`

Follow the directions to burn this to the SD

== Power up the RPi ==

At initial boot, a configuration screen will come up on the RPi. Select and execute the following options:
{{{
expand_rootfs
change_timezone
memory_split - select the option which allocates the most memory for ARM
ssh - enable ssh
finish - answer yes to rebooting 
login as pi (default password in raspberry)
}}}

If you want to run the configuration again

raspi-config:

{{{
sudo raspi-config
}}}
== set your password ==

Change the password for the user pi:
{{{
passwd
}}}

== set the ROOT passwd ==

NOTE: there isn't a root password by default.  To login in as root we have to set a password.

{{{
sudo passwd root
}}}

We might not need to do this.  However, many old-school linux references (pre-sudo) require logging in as root to execute some administrative commands. 

== set hosttname and IP address ==

Now we are going to change the IP address to be a static address, and we are going to change the hostname. Depending on your LAN configuration these addresses may be different.

=== edit HOSTS file ===

NANO is a text editor.

To show LINE NUMBERS in nano, start with the option ` nano -c <filename>`

{{{
sudo nano -c /etc/hosts
}}}
Change:
{{{
raspberrypi
}}}
to:
{{{
rpi-my-unique-name
}}}

(or whatever you want the hostname to be).

And add the following line (the ip address is the static address we will set later):
{{{
192.168.0.170 rpi-my-unique-name
}}}

NOTE: I'm using 192.168.0.170 as my example, you should use an IP address suitable for your network and router.  Configuring yur network and router is beyond the scope of this instruction, but you want an address that you can set as STATIC so it doesn't get changed due to power failures, etc. 

=== edit HOSTNAME file ===

{{{
sudo nano -c /etc/hostname
}}}
Change:
{{{
raspberrypi
}}}
to:
{{{
rpi-my-unique-name
}}}

(or whatever you want the hostname to be).
{{{
sudo nano -c /etc/network/interfaces
}}}
Change the line:
{{{
iface eth0 inet dhcp
}}}
to:
{{{
iface eth0 inet static
}}}
And add the following lines:
{{{
address 192.168.0.170

netmask 255.255.255.0

gateway 192.168.0.1
}}}

And reboot the system:

{{{
sudo reboot 
}}}

to allow the changes to take affect

----

= Run HEADLESS =

This step is optional.  You don't HAVE to run headless, but the little RPi is faster if it isn't occupied with running with a GUI.  These steps apply to your windows PC.

== install Xming ==

Xming works really well but its a little funcky to set up.  Folks who use Xming assume everybody understand everything about Xming, which make is a bit problematic for new folks. 

The idea is that Xming talks through PuTTy and lxterminal and lets us SSH into terminal windows on the RPI.  If you don't understand, that's ok, it doesn't matter at this point. Here's what matters:

  # Start Xming - Xming Launch
  # Select Multiple Windows - Next>
  # Select Start a Program Next>
  # Start Program: lxterminal (replace 'xterm' with 'lxterminal').Don't hit Next yet.  In the same window: 
  # Run Remote
  # Select Using PuTTy (plink.exe)
  # Connect ot computer: IP.Address.of.RPi (this is IP address you put in /etc/hosts on the RPi
  # Login as user: pi (unless you changed it)
  # Password (raspberry or whatever you set)
  # Next>
  # next> (nothing gets selected on the additional parameters page
  # Finish

It takes several seconds for the systems to negotiate ssh passwords and whatever else they do to introduce themselves.  Eventually if all is well you get a command window on the RPi.   You are not working remotely on your RPi from your WXP PC.  

Navbigate to the instructions pages on the PC browser and cut and paste the instructions into the RPi terminal window.  Its alot easier, and you are less prone to typing mistakes. 

-----

= update and upgrade =

These step can be run from a terminal window on the RPi desktop GUI, or remotely from a terminal window using xterrm, Xming etc.

== update ==

from teminal window:
{{{
sudo apt-get update
}}}

== upgrade ==

{{{
sudo apt-get upgrade
}}}

------

= install SAMBA =

SAMBA allow us to get at the RPi linux file system from a windows PC.

== download and install the packages ==

{{{
sudo apt-get install samba

sudo apt-get install samba-common-bin 
}}}

== edit the config files ==

sudo nano -c /etc/samba/smb.conf

Find the line (line 38):
{{{
workgroup = WORKGROUP
}}}
and change the workgroup
{{{
workgroup = MyWorkGroup
}}}
Use can your own workgroup name

Find the line (line 62): ( I think  this is wrong line number?)
{{{
# security = user
}}}
and uncomment:
{{{
security = user
}}}
Find the line (line 250) in the `[homes]` section:
{{{
read only = yes
}}}
and changes to:
{{{
read only = no
}}}

restart the samba server:

{{{
sudo /etc/init.d/samba restart
}}}

Set a password for the user pi, this is separate from the login password.  The Samba password will be the password you need to enter on a remote system to acces pi's files.  You can use the same password for linux and for samba if you wish, just be aware that they are NOT locked together. (It took me a while to figure this out :) )
{{{
sudo smbpasswd -a pi
}}}

restart the samba sever again to make the password change take affect: 
{{{
sudo /etc/init.d/samba restart
}}}

On windows – map network drive 
\\MyRPi\pi user - pi, password - set with smbpasswd 

=== this might be OPTIONAL add a user for your WXP id ===

The first time I set up the RPi Iwas able to map to it on WXP.  The second time, its not letting me map a drive letter on WXP to my home directroy on the (second) RPi.

So I think I need to add a user to the RPi with the same name as my WXP login. 

{{{

}}}

Nope, this didn't work either.  I must have missed a stepp in the SAMBA set up.

-------

= GO LANGUAGE =

To install and build the go language:

We need to add some environment variables:

{{{
cd

nano -c .profile
}}}

Add the following to the end of the file:

{{{
export GOROOT=$HOME/go
export GOOS=linux
export GOARCH=arm
PATH=$HOME/mygo/bin:$GOROOT/bin:$PATH
export GOPATH=$HOME/mygo
export MINICOM=-“b 115200 -o -D /dev/ttyAMA0”
}}}

the last line should be(?):`export MINICOM=“-b 115200 -o -D /dev/ttyAMA0”`




Logout and log back in, make sure teh environment variables are correct:
{{{
env
}}}

NOTE:  For some reason, the .profile envirnmentn setting are not shown in the Xming window.  But you can check it when running headless using `teraterm`.  The Environment variable are displayed in the GUI terminal window. 

== tools ==

Install some tools we will need:

=== mecurial ===

{{{
sudo apt-get install mercurial
}}}

=== install git ===

{{{
sudo apt-get install git
}}}


=== Go source files ===

Copy the source for Go to your rig:
{{{
hg clone -u tip https://code.google.com/p/go
}}}

The following patch must be applied:

{{{
cd ~/go/src

wget https://codereview.appspot.com/download/issue5987063_32001.diff

patch -p2 <issue5987063_32001.diff

}}}

NOTE: I get an error here,  but it seemed to work...


[https://codereview.appspot.com/5987063 Details on Issue 5987063]

= COMPILE the GO SOURCE =

This compile will take about an hour.
{{{
./all.bash
}}}

NOTE:  There's an illegal instruction right at the end using 

2012-08-16-wheezy-raspbian

This draft needs update for the recent version

----

Copied over goterm & gomuxterm and compiled 

= end notes 20120914 =


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages