#summary Verify that Propforth functions as defined
#labels v2.7

= Introduction =

Main functions are 
 * using the stack
 * defining new words (extending the dictionary)
 * saving the modified dictionary
 * rebuilding the entire forth dictionary


= Using the stack =
  
  * Type in 1 2 3, and type in the st? word to display the stack: 

_Cog6 ok_

*1 2 3*

_Cog6_

*st?*

_ST: 00000001 00000002 00000003_

_Cog6 ok_

  * Add the top two numbers together, print the result, and re-display the remaining stack 

_Cog6 ok_

*+ . st?*

   Notice: there is a SPACE between *+* and *.* and between *.* and *st?*

_Cog6 ok_

*5 ST: 00000001*

_Cog6 ok_

   This confirms the forth kernel is running

= Defining New words (Extending the FORTH dictionary) =

  * Type an undefined token, create a definition using that token execute the definition; discard the definition  

_Cog6 ok_

*hello*

_UNDEFINED WORD hello_

_Cog6 ok_

*: hello ." Hello Welcome to PropForth" ;*

   * NOTICE that there is a SPACE after the colon, after the quote, and before the semi-colon

_Cog6 ok_

*hello* 

_Hello Welcome to PropForth_

_Cog6 ok_

*reboot*

_PropForth 2.7 2010May26 14:50 0_

_Cog6 ok_

*hello*

_UNDEFINED WORD hello_

_Cog6 ok_

= Saving the Forth Image =

 * create a new word definition, save the forth image, verify the new definition is present 

_Cog6 ok_ 

_Cog6 ok_

*hello*

_UNDEFINED WORD hello_

_Cog6 ok_

*: hello ." Hello Welcome back to PropForth" ;*

_Cog6 ok_

*hello* 

_Hello Welcome back to PropForth_

_Cog6 ok_

*saveforth_

...............................................................................................................................................

_Cog6 ok_

*reboot*

_PropForth 2.7 2010May26 14:50 1_

_Cog6 ok_

*hello* 

_Hello Welcome back to PropForth_

_Cog6 ok_  

   NOTICE above that the digit after the version string incremented after executing the saveforth word.  

    _PropForth 2.7 2010May26 14:50 *1*_  

    * The saveforth word has written the RAM image into eeprom.  

   This confirms that the dictionary in RAM can be extended, the RAM definitions discarded, and the RAM definitions saved to eeprom.

= rebuilding the entire forth dictionary = 

   NOTE this section is to be revised or moved to a separate page with better explanation.  

   Reboot:

*reboot*

 * add new forth definitions as desired 

   Upload spinmakerPart1.f to the prop by copy and pasting the entire file into the teraterm window.

   Upload spinmakerPart2.f to the prop by copy and pasting the entire file into the teraterm window.

  * execute spimaker at the forth prompt: 

*spinmaker*

   wait approximately 2 minutes 30 seconds for the text to scroll on the teraterm window

  * copy the output of spinmaker from the TeraTerm window and paste it into PropForth-Template.spin, save the resulting new file

   In the teraterm window, after 

_ForthMemoryEnd_ 

_Cog6 ok_

   is displayed and the text stops scrolling, copy the output of spinmaker. (I.E Ctl+A to "Select All" and CTL+C to copy the highlighted text).  Include all the text from ForthDictStart to ForthMemoryEnd. (About 26,000 characters)

   Paste the output of spinmaker into PropForth-template.spin.  Search for the text "version".  Update the version string, and save the file with an appropriate name.  
For Example propforthxxx.spin.

  * Load the new propforthxxx.spin into the prop using Propeller Tool

   Use Propeller Tool to open propforthxxx.spin and load it into the Prop eeprom.

  * confirm the version string 

   Open teraterm and verify that the prop now displays the new version string and the dictionary contains the new or modified definitions. 

   This confirms that the propforth kernel can generate new version of the forth definitions portion of the propforth.spin file, and the file can be loaded into the prop and executed.

= The above results indicate that the  main functions of PropForth are working  =

http://code.google.com/p/propforth/wiki/PropForthFAQ