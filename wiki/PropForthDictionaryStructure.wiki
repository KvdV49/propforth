#summary One-sentence summary of this page.

= PropForth Dictionary Structure =

The PropForth Dictionary is located in hub memory. Before a cog is started with the PropForth interpreter, the forth 16 bit word variables mswDictend and and mswMemend should be set to the top of memory which should be used by PropForth. This is done by the following spin code:
{{{
  WORD[ @mswDictendPFA + 2] := @ForthDictEnd
  WORD[ @mswMemendPFA + 2] := @ForthMemoryEnd
}}}
The labels ForthDictEnd and ForthMemoryEnd are set at the end of an array of longs. This array size can be adjusted by removing / adding declarations of longs.

The dictionary is a series of Dictionary Entries. The last entry in the dictionary is always pointed to by the word variable mswlastnfa. The LinkField points to the previous entry in the dictionary. If the LinkField is 0, there are no other entries.

= Dictionary Entry Structure =

There is no code pointer which points to the ParameterField, it is inherent. The ParameterField is the first word following the NameField.

 * LinkField - word - points to the previous name field in the dictionary word
 * NameField
   * byte - length of the name field (lo 5 bits)
    * bit 7 ($80) set if it is a forth word 
    * bit 6 ($40) set if it is an immediate word 
    * bit 4 ($20) set if it is an eXecute word - execute this word in interactive mode as well if the immediate flag is set 
   * bytes - the actual name, if the name is a word constant, and it starts with `ca_` the spinMaker assumes it to be a reference to the cog data space and sets the constant to be (name - a_base) /4.  If it starts with `cm_` it is assumed to be a main memory reference and the constant is set to be namePFA +$10. If the name is an assembler word the address is set to (a_name - a_base)/4 assembler names are not constants, they are a different type of dictionary entry.

 * ParameterField - the series of word addresses to execute, and literals for a forth word
  * if it is a forth word one of the hi bit ($FE00) will be set
  * assembler addresses are always < 512, this of course means that the ForthDictStart must have at least 512 bytes used before it, since this is only 128 longs, and the assembler code, and forth stacks are before this, this is not an issue. If it is an assembler word there is only 1 word and it is the assembler address.

The following forth code walks the dictionary structure prints out the parameter field.
{{{
\ dictEntryDump ( addr1 addr2 -- ) addr1 is the LinkField of the next entry, addr2 is the NameField of the word to dump
: dictEntryDump dup .word 3a emit space dup .strname space nfa>pfa dup .word 3a emit space do i w@ .word space 2 +loop cr ;
\ dictDump ( -- ) dumps the PropForth dictionary
: dictDump mswHere w@ mswlastnfa w@ begin 2dup dictEntryDump nip nfa>lfa dup w@ dup 0= until 2drop ;
}}}