#summary Extensions to the PropForth Kernel
#labels v4.5,v5.0

= Introduction =

These are the !PropForth Extensions.  A section is to be added explaining  each extension listed.  Typically a given application will not need all extensions.  The user/developer chooses the extensions suitable for the application, and only those need to be added.  This saves on memory footprint, and program complexity.  This is roughly analogous to other environments where only the necessary functions are selected at compile time to be compiled into the application; the difference is that in FORTH the user plays a greater role in selecting the functions and at what point a given extension is added. 

 * [PropForthExtensions#Kernel_Extensions Kernel Extensions]
 * [PropForthExtensions#EEPROM_Extensions EEPROM Extensions]
    * [PropForthExtensions#EEPROM_READ-WRITE_File_system EEPROM READ-WRITE File system]
    * [PropForthExtensions#EERPOM_READ-Only_File_System EERPOM READ-Only File System]
    * [PropForthExtensions#Temporary_Write_Capability_for_Read_Only_File_System Temporary Write Capability for Read Only File System]
 * [PropForthExtensions#Software_Logic_Analyzer_Extension Software Logic Analyzer Extension]
 * [PropForthExtensions#Prop Assembler ExtensionProp Assembler Extension]
 * [PropForthExtensions#servo extensionservo extension]
 * [PropForthExtensions#Auxiliary Serial Terminal ExtensionAuxiliary Serial Terminal Extension]
 * [PropForthExtensions#buffered I/O extensionbuffered I/O extension]
 * [PropForthExtensions#case statement extensionscase statement extensions]
 * [PropForthExtensions#Fast-Hartley Transform (FHT) extensionFast-Hartley Transform (FHT) extension]
 * [PropForthExtensions#OnBoot Extension (Change Boot-Time behavior)OnBoot Extension (Change Boot-Time behavior)]
 * [PropForthExtensions#Optimizer ExtensionOptimizer Extension]
 * [PropForthExtensions#Peep-hole Assembler ExtensionPeep-hole Assembler Extension]
 * [PropForthExtensions#Disassembler ExtensionDisassembler Extension]
 * [PropForthExtensions#Secure Digital Card (SD) ExtensionsSecure Digital Card (SD) Extensions]
 * [PropForthExtensions#Spinneret ExtensionsSpinneret Extensions]
   * [PropForthExtensions#IP ExtensionIP Extension]
   * [PropForthExtensions#Telnet Server ExtensionTelnet Server Extension]
   * [PropForthExtensions#NTP Client ExtensionsNTP Client Extensions]
   * [PropForthExtensions#HTTP Server ExtensionHTTP Server Extension]
 * [PropForthExtensions#Real Time Clock (RTC) ExtensionsReal Time Clock (RTC) Extensions]
 * [PropForthExtensions#ROM-Less ExtensionROM-Less Extension]
 * [PropForthExtensions#MultiChannel High Speed Synchronous Serial Channel ExtensionMultiChannel High Speed Synchronous Serial Channel Extension]
 * [PropForthExtensions#MultiProp ExtensionMultiProp Extension]

These extensions exist but have not been brought forward to the current release
 
 * [PropForthExtensions#VGA ExtensionsVGA Extensions]
 * [PropForthExtensions#aarez aarez]

These extensions exist but have not been added to the download archive (note please add more hours to the day)

 * [PropForthExtensions#Multi-Line Character LCD Panel ExtensionMulti-Line Character LCD Panel Extension] (caskaz)
 * [PropForthExtensions#Floating Point Coprocessor (FPU) ExtensionFloating Point Coprocessor (FPU) Extension] (nglordi)
 * [PropForthExtensions#Analog Computer SimulatorAnalog Computer Simulator] (nglordi)

The extensions are on the list but have not seen any code presented to the public.  As you can see, most extensions beyond the kernel are only plans at this point (20110710).  When the kernel is complete, adding support for a given hardware should be a simple matter of reading the datasheet and writing the driver.  

 * [PropForthExtensions#Electronic Speed Controller (ESC) ExtensionElectronic Speed Controller (ESC) Extension]
 * [PropForthExtensions#Stepper Motor ExtensionStepper Motor Extension]
 * [PropForthExtensions#RCTime ExtensionRCTime Extension]
 * [PropForthExtensions#GPS ExtensionGPS Extension]
 * [PropForthExtensions#Accelerometer ExtensionAccelerometer Extension]
 * [PropForthExtensions#Gas Sensor ExtensionGas Sensor Extension]
 * [PropForthExtensions#Gyro ExtensionGyro Extension]
 * [PropForthExtensions#Pressure Sensor ExtensionPressure Sensor Extension]
 * [PropForthExtensions#PING)) ExtensionPING)) Extension]
 * [PropForthExtensions#Xband Motion ExtensionXband Motion Extension]
 * [PropForthExtensions#Load Sensor ExtensionLoad Sensor Extension]
 * [PropForthExtensions#A/D ExtensionsA/D Extensions]
 * [PropForthExtensions#D/A extensionD/A extension]

= Kernel Extensions =

  == Boot Kernel ==

  The Boot Kernel is the bare Forth Kernel.  Sometimes the bare kernel is defined as the smallest unit of Forth that can read an write memory.  In PropForth, the bare kernel is defined as the smallest unit that is able to re-generate the Propforth.spin file. 

 The Boot Kernel is generally used AFTER development is complete (all the applications code is finalized).  This is typically in stand alone turnkey applications that do NOT need the interactive forth command prompt included in the final aaplication. 
  
  == Development Kernel ==


Add your content here.


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages