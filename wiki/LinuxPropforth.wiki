#summary Using Propforth with Linux
#labels v5.5,Linux

<wiki:toc max_depth="9" />

= Introduction =

There's a couple ways to get propforth onto a the quickstart under linux.  

I use Ubuntu 12.04 and 

 *  Newest way - fast! Compile & Load using SimpleIDE directly in Ubuntu
 *  Old slow clunky way - run a virtualbox windows xp session.

= Install Linux =

If you have an old PC, the hardware might not accept 12.04 directly.

Using a KT600a motherboard, I had to install 11.04 first, then upgrade.

= OPTION: WORKS GREAT! - SimpleIDE =

[https://sites.google.com/site/propellergcc/downloads SimpleIDE ] is part of the Prop GCC project.  The goal is to extend the GCC compiler tools to allow compilation to the prop chip as a target.   The project started on the prop 1 and should carry over to the Prop 2.  The guys working on this are very good at what they do.  Be aware that this is in development an may not be geared entirely for beginners. 

 == Download SimpleIDE ==

On this page 

https://sites.google.com/site/propellergcc/downloads/linux-downloads

Skip down to STEP 1 to choose the package that matches your install as displayed on 

Applications > System > System Tools > Detail

Click the package to automatically download to your downloads directory

  === This test ===

This is the version used for these  instructions was   [https://propside.googlecode.com/files/SimpleIDE-0-8-5-1.i686-debian-linux.tar.bz2 https://propside.googlecode.com/files/SimpleIDE-0-8-5-1.i686-debian-linux.tar.bz2]

Downloaded this. (to downloads directory)

 == Install SimpleIDE ==

Need to extract the archive to adirectoy and run the install script

  === Extract the Archive to a directory ===

Create a directory to contain the software.  I made "PropSoftware" in my home directory

`/home/braino/PropSoftware`

Click on the archive in downloads, and extract it to this directory you created. 

 NOTE: the tar.bz2 stuff is only if you prefer to work from the command line.  If you don't already know how to do this, you don't want to do this.

 === Run the install script ===

Open a terminal window [ CTL + ALT + T ]

Navigate to the directory with setup.sh
{{{
cd /home/braino/PropSoftware/SimpleIDE-0-8-5
}}}

In the example below, replace <MyUser> with your Linux login user id

Run the setup script
{{{
sudo ./setup.sh $USER 
}}}
If successful, final message should be

`Setup complete. To run program use: ./simpleide`

 == Run SimpleIDE ==

After install, 

in a terminal window,

Navigate to the simpleIDE main directory 
{{{
cd /home/braino/PropSoftware/SimpleIDE-0-8-5
}}}

run 
{{{
./simpleide
}}}

Three windows open

   === Splash Screen ===

The Splash Screen opens to remind you what application you typed in a half second ago

  * Unclick the SHOW SPLASH box, Close the SimpleIDE Splash screen

   === Preferences Window ===

The Preferences window is opened automatically the first time the program is run.  DON'T TOUCH ANYTHING it is already set up automatically.  Only change this if you know exactly what you are changing and why, at this point you probably DON'T, so DON'T. (Its probably a debug thing left over from development, or needed on other versions of Linux that don't do the automatic stuff).  

  * Close the defaults directory window.  

   === SimpleIDE window ===

The last window should the  simpleIDE main window.

There will be no project and no source file displayed yet.


  === setup a project to compile and load a spin program ===

  * You can navigate to a directory that contains a spin file.  But for the time being, copy the spin file to the top SimpleIDE directory, till you decide how you want to do things.

In this case I copied  `devkernel.spin` from the Propforth directory to

`/home/braino/PropSoftware/SimpleIDE-0-8-5`

When the simpleIDE window opens, it should display this source file.  (I'm writing this after thafact and things can change after they are set up once, but you should get the general idea)

  * Click on the file to open the source file, and create a Project.  The project should be type `SPIN`, the memory models and other options get greyed out. 

  * SAVE the project.  (I think it asks in such a way to suggest you DON'T want to save.  You DO want to save or it doesn't work.  This seems to make sense to folks that are familiar with the tool, but it tripped me up the first couple times). 

  * SET the project.  (This is important, the tool does not automatically set the project as 'active' or whatever unless you manually click this. I don't know why.  This seems to make sense to folks that are familiar with the tool, but it tripped me up the first couple times)

   === COMPILE 1 ===

  * Press the HAMMER Icon at the top of the screen.  It will compile the devkernel.spin file open in the source code window.

Final message should be something like

`  Compiled 1071 Lines of Code in 0.02 Seconds `

It goes pretty quick.

  === FINAL HARDWARE AND OS SETUP ===

Last step is to allow SimpleIDE access to the USB to Serial connection for the Quickstart.


 ==== Physically connect the Quickstart ====

  * Connect the Quickstart to a USB port.  Make sure the Green power LED comes on.  the Red and blue LEDs will flicker, and the OS may do some setup stuff automatically in the background the first time. In any case it only takes a couple seconds. 

 ==== Grant your USER ID access to the USB port ====

In the example below, replace <MyUser> with your Linux login user id

  * Add your user ID to the group that has permission to access the USB device

{{{
sudo adduser <MyUser> dialout
sudo reboot
}}}

sudo will ask you for your administrator password the first time. 

Then it will reboot the system. Navigate back here if you still need help. 

  === Compile 2 then load ===

Ah! Your back.   Glad that worked. 

  * OK, Open the simpleIDE window again. (Remind me to figure out how to add a link for simpleIDE to the Gui menus)

  * Open the Devkernel project and compile devkernel.spin with the HAMMER icon again. Did it still work?  Good. 

If the Quickstart is connected correctly, the SimpleIDE window should have a dropdown window in the upper left corner.  This should display 

`/dev/ttyUSB0'

This means that it sees the Quickstart (if  there are lots of usb devices on you r machine this might need to be changed, I only have the one so `/dev/ttyUSB0' worked on mine.)

  * Next to the HAMMER icon, find the green down arrow icon (BURN to EEPROM).  Click this to download to EEPROM.  

The Quickstart LEDs should flash, and the final message should be something like this:

{{{
Loading /home/braino/PropSoftware/SimpleIDE-0-8-5/DevKernel.binary to EEPROM via hub memory
32704 bytes sent

Verifying RAM ... 
OK
Programming EEPROM ... 
OK
Verifying EEPROM ... 
OK
}}}

SUCCESS!!

You are now able to compile and load a spin file from linux Ubuntu on a PC workstation

= OPTION: Run a WXP Virtual Machine =

This is the brute force method.  It takes about an hour to set up the [https://www.virtualbox.org/ VirtualBox] software. It takes about 10 Gig minimum to set up a virtual hard disk.  It takes about an hour to install WXP on the virtual machine. It takes about an hour to set up the anti-virus nonsense.   It takes about two days for all the windows update nonsense to download and install.   

At the end of this time, the standard windows tools are available.  

It takes about the same time to boot the virtual machine as a physical machine (slow).   The virtual machine fights the linux OS for the resources (USB,CD, etc) so you have to be careful of that.  You still should not leave the windows machine running for any length of time, just as with a physical windows machine (prone to virus, trojans, various other vulnerabilities).

But at least it does the job. 

  == install Virtual Box ==


In the Ubuntu software center, Oracle Virtual Box 4.1.12 is offered, but this doesn't work.

Go to the developer site 

https://www.virtualbox.org/

and get 4.2 (4.2.4.2. 8 is what I used)

http://download.virtualbox.org/virtualbox/4.2.8/virtualbox-4.2_4.2.8-83876~Ubuntu~precise_i386.deb

  == Install Windows ==

Be sure you have a valid license

Be sure to install service pack 3, some antivirus (like AVG_free_x86_xx), and maybe a (more) secure browser like firefox.  This might be easier to do after mapping shared directories from linux, below.

Notice: if you are coming from Windows, the keyboard numeric keypad might behave oddly. If you prefer to have the keypad behave as in Windows:

  Applications > System Tools> System Settings

  Keyboard Layout > Layouts > Options 

  > Miscellaneous comp[compatibility options

*Shift with Numeric keypad works as in MS Windows*

  == install Guest extensions ==  

Launch the Oracle Virtual Box application.

Under Devices, select Install Guest applications

Allow the software to install, and reboot

     === Optional: 3D acceleration ===

  Restart Windows virtual machine in !SafeMode

  Again select install Guest Additions

  This time it will let you select enable 3D acceleration

  Allow the software to install and reboot


  == Allow USB ==

You will have gotten a bunch of messages saying USB is not captured, and mouse is captured.   Now we set up USB and get rid of the nag screens.

    === add your login ID to vboxusers group ===

You'll messages tell you to add your user to the vboxuser group

in a terminal (CTL+ALT+T) enter the command

{{{
sudo adduser <myloggin> vboxusers
}}}

    ===  Allow virtual session to access USB ===

Notice that you have to shutdown the windows virtual machine for this step.

Shutdown the Windows Virtual Machine.

In Oracle !VirtualBox Manager > Settings > USB 

  Verify that Enable USB Controller is checked

  Also check Enable USB 2.0 (EHCI) controller

An error warning pops up, that is OK. 

Restart the windows virtual machine 

  Start ->

Another warning comes up about auto capture keyboard, check "Do not show this again" and hit OK

The virtual machine should now be able to see the USB device when you connect your propplug, Quickstart, etc.

  == Map linux directory so Windows can see it == 

Devices > Shared Folders

Navigate to your Public directory. Map it as Read Only

     === Optional: Writable ===

From Linux:

Under your Public directory:

Make a subdirectory named "Writable" or something

Give this one full access

*This directory is so yu can send stuff back out to Linux from windows. The Public directory is read only in case something bad gets in through windows, it will limit its affect (maybe).* 

  == Install Proptool ==

Be sure to get version 1.3.  Note that Googling for parallax propeller proptool tends to bring up version 1.2.7 (R2) (or at least it used to, but its not the right version).

As of this writing, I notice there is a version 1.3.2, I will be trying that. 

http://www.parallax.com/Portals/0/Downloads/sw/propeller/Setup-Propeller-Tool-v1.3.2.zip

  == Download Propforth ==

The propforth download archive is pretty much self contained and complete. 

Unxip the archive. 

Skim doc/Propforth.htm sections 1 through 4.  Don't worry if it doesn all make a lot of sense right away.   Just do it.  

Do the examples in propforth.htm.  This is cut and paste.  Just do it.  It will start to make sense. 

READ doc/Propforth.htm sections 1 through 4 once more a little slower after your done the examples.   This time, when you do the examples, you will find that you can play and experiment, and you will be able to predict some of the results. 

Now you know as much as I do about propforth for the most part. From here on out, you skill level is a function of the time you spend practising using propforth.  The more hours you accumulate, the more skill you will develop. 

= NOT AN OPTION:  Attempted setting up WINE =

I tried WINE windows emulator version 1.4 as included in Ubuntu 1.4

I volunteered to update the WINEHQ database for the proptool as v1.3.2 is not listed yet.   I'll do more experiments if they get back to me. 

  == update drivers - NO - did not work ==

The installer ran.  I did NOT allow the installer to "update drivers" as I figured the windows drivers might be a problem in linux.  The result did not detect any USB port or quickstart. Uninstalled.

  == update drivers - YES - did not work ==

The installer ran again.  This time I allowed the installer to "update drivers".  The result did not detect any USB port or quickstart. 


= Conclusion: Use SimpleIDE =

Use SimpleIDE if you can get it working. The included documentation is a little behind the development, and is not geared towards a new user. It took me a day to figure it out and write these note;  using these you should be able to get it set up in under an hour. 

SimpleIDE is very fast once its working.  This tool is supported by Parallax, and the best folks are using and support this on the forums.  You can also compile C to the prop (C and C++ are beyond the scope ot this project).

= Conclusion: Use Virtualbox as a last resort =


Use Oracle Virtualbox if you cant get anything else to work.  

WINE does not work with Propeller Tool, but a virtual machine session works pretty much the same as a regular windows session. 