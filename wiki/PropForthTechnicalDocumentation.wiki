#summary Technical Documentation for the PropForth kernel and utilities.
#labels Phase-Design,In-progress20100705

= Introduction =

PropForth provides an interactive development environment for the Parallax Propeller micro controller.

PropForth consists of a Forth Kernel and a set of utilities that are optional extensions to the kernel.


= The PropForth Kernel =

* The PropForth.spin source code file

PropForth Kernel source code is found in the file PropForth.spin. 
PropForth.spin is loaded into the Propeller chip EEPROM using the Parallax Propeller Tool software.  When the Propeller is power cycled or rebooted, the spin interpreter (an assembler program) running in cog0 launches the PropForth environment (another assembler program).  

* the PropForth development environment

The PropForth environment consists of a Serial driver running in cog7 and the forth kernel running on other cogs.  

* The PropForth serial driver

The serial driver is an instance of the forth kernel running a serial driver application.  The function of the serial driver application is to manage communications between forth kernel instances running in the other cogs and the users terminal program (teraterm4.65 is used throughout this documentation).  

* PropForth command prompt

The users terminal (teraterm) displays the command prompt of the cog running the users forth development environment, which is usually cog 6 by default.

* Nitty Gritty:  Serial Communication Mechanism 

To the user, it appears that the terminal application is talking directly to cog 6.  In fact, the terminal application is talking to the cog 7 serial driver, and the cog7 serial driver is talking to the forth kernel running in cog6.  This communication is transparent to the user, but is an important distinction further on.  


* Inside the PropForth.spin File

The PropForth.spin file can be approached as  having two sections:

1) the Propeller Assembly implementation of the Forth Dictionary and inner interpreter;

2) the forth definitions of the forth words.

The Propeller Assembly implementation of the Forth Dictionary and inner interpreter is all the spin and assembly code before ForthDictStart in the PropForth.spin file.

The forth definitions of the forth words is all the code between ForthDictStart and ForthMemEnd, which is the remainder of the file. 

* Propeller Assembly implementation of the Forth Dictionary and inner interpreter

The author of PropForth developed the assembler implementation of the forth dictionary and inner interpreter based on previous knowledge of forth and of the propeller architecture and the propeller assembly.   This section generally does not change much.  If you wish to make changes you are free to do so, but understand that this can affect the design of the kernel. 

Routines that are used in the infrastructure of the dictionary and inner interpreter include routines that are not called from user applications.  The words that are internal to infrastructure contain an underscore character. {{{  a_ v_ c_ $C_  }}}

{{{ 
c_ a_ v_ prefixes are ONLY used by the assembler. These reside in COG MEMORY.

c_cogResidentCode (subroutine?)
a_cogResidentAssebler
v_cogResidentVariable

}}}

{{{ $C_ }}} These words are entries in the forth dictionary to access the assembler labels.  An example using the assembler VGA driver will be presented at a later date.  A simple example using the serial driver is also planned but is not ready to be posted as of this writing. 

* The spin definitions of the forth words

The second section of PropForth.spin is the section between ForthDictStart and ForthMemEnd.  

This section consists of spin code generated by the extension word spinmaker.  The source code for this word is found in spinmaker.f. 

spinmaker reads the current dictionary, and generates spin assembler code to that will produce the same executable image.  

When spinmaker is executed, code is generated that will produce whatever forth environment is running. 


* The forth definitions of the forth words

Once the inner interpreter and dictionary are established in assembler, the remainder of the kernel can be defined using forth source code.  The forth source code is in two parts, PropForthPart1.f and PropForthPart2.f.  This is done due to the size of the forth source code text; there is more text than the propeller can handle in a single text file.

When the two files PropForthPart1.f and PropForthPart2.f are loaded into the propeller, those definitions are added to the forth dictionary.  The most recent definition for a given word is the only definition visible to the forth interpreter, so old definitions are hidden.  When spinmaker is executed, only the most recent definiiopn is used. 




{{{ _aWord }}}  dictionary entries that are prefixed with an underscore are regular forth words, but are implemented in support of forth words.  These words are not expected to be called by a user application. For example, the word _sttop is a storage location that holds the address of the top of the data stack.  The word _stbot is a storage location that holds the address of the bottom of the data stack.  The word _rstop is a storage location that holds the address of the top of the return stack. The word _rsbot is a storage location that holds the address of the bottom of the return stack.




= WORK IN PROGRESS 20100705 =
= CONTINUE HERE =




Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages