#summary HC05 bluetooth cable replacement - master or slave
#labels LittleRobot,v5.5,HC05,Bluetooth,SerialCableReplacement

= HC05 master/slave =

== Datasheet ==

ftp://imall.iteadstudio.com/Modules/IM120723009/DS_IM120723009.pdf

http://www.mcu-turkey.com/wp-content/uploads/2013/01/HC-Serial-Bluetooth-Products-201104.pdf

== HC05 KEY is Scallop 34 ==

This is the one near the antenna, opposite pin 1

Connect:

|| HC05 Bluetooth module ||
|| HC05  ||  Wire Color|| Prop ||
||Pin 1 - hcTX  || Orange/white or GEY || P26 dlrS_rxpin=26  || closest to Antenna ||
||Pin 2 - hcRX   || green/white or WHITE || P25 dlrS_txpin=25 || 
||Pin 12 - 3.3v ||Orange or RED ||3.3v || 
||Pin 13 - GND  ||Blue or BLACK || GND || 
||Pin 34 - Key || Green|| P27  || closest to Antenna ||

Notice that the Tx of one device connects to the Rx of the other, they criss-cross.


= Set up HC05 =

To start with, we are going to use the quickstart to program the HC05 configuration using the HC05 physical connection. 

From following the above, we have HC05 Tx and Rx serial connected to Prop pins P25 & P26, and HC05 KEY (program enable) connected to Prop pin 27.  

HC05 is configured to 9600 baud by default. 

The following scripts will set the HC05 name and baud from the slow 9600 to the fast 230400. 

We expect to see our command, followed by a response, followed by a bllank line, and finally OK.

{{{
<command>
<response>
OK

Prop0 Cog6 ok
}}}

If instead you see

{{{
<command>

Prop0 Cog6 ok
}}}

The communication isn't working.  Maybe the part is programmed for something other than the default 9600,N,1

If so, see below, "A Difficult HC05" at the bottom of the page.

BACK TO WHAT THE SCRIPT DOES:

It tells the HC05 to set its name (to whatever you want, I don't know many max  characters)

Notice that the baud will get changed to 230400 baud , so the  Config script set for the "default" 9600 baud won't communicate after the power is cycled.  

To rerun the script, ensure the correct baud. (Or do the "KEY High at power on" step described elsewhere) 

== Inital Configuration of the HC05 ==

Run the initialization script in BluetoothHCo5-06.f to program the factory fresh HC05

We run this script to 
 * give it a unique name (choose anything)
 * set baud to 230400
 * set (this one) to SLAVE mode
 * set the password (each kid connects to the correct bot)

I set the unique name to 

  * LittleRobotYYYMMDDhhmm

This way, each kid, in each class, gets a unique number.  When I meet with the robots again, I can sometimes tell when the bot came into service from the date.


== Using slow baud, we configure to run fast baud ==

NOTICE that after the script run successfully, the baud rate has been set from 9600 (or 38400) to 230400.  If you with to re-run the script (to rename your bot, etc) you must change so the baud on the HC05, the quickstart, and the terminal program, all match. 

== EDIT the HC05 configuration script into the Terminal ==

First edit the script to set
 * The robot ID
 * the Robot password pin

== Paste the HC05 configuration script into the Terminal ==

After you've edited the script paste it in the terminal 

{{{

\ REMEMBER set pins in PROPFORTH as below!!!! 
\ Im USING quickstart

fl

\\ for the HC05

\ REMEMBER! ONLY connect the KEY-GREEN-Prop P22 wire when you run the programming script!
\ AFTER the script is run, disconnect the green wire!
\ green wire \ GREEN key - PROGRAM WHEN 3.3V - to prop 27 | Quickstart postion28
\ Raise P27 Hi when connected to HCo5-pin34 to program
  27 wconstant hcProgPin 

\ after programming, disconnect the GREEN wire!

\ white/orange wire \ WHITE - HC05-pin02 Rx - to prop 26 | QuickStart position27
  26 wconstant hcRx

\ white/green wire  \ GREY - HC05-pin01 Tx - to prop 25 | Quickstart position26
  25 wconstant hcTx

 9600 4/ wconstant hcBaud       \ REMEMBER! AFTER you run this once,
\ the baud is set to a really fast speed, so you must change these comments
\ 230400 4/ wconstant hcBaud  
\ 38400 4/ wconstant hcBaud \ or use this line for the KEY-HI-POWERON method for 38400 baud  

0 wconstant hcSerialCog \ cog0 will talk to the HC05 for programming

hcSerialCog cogreset 100 delms
c" hcRx hcTx hcBaud serial" hcSerialCog cogx 100 delms
1 hcSerialCog sersetflags


: hcSend
	cogid hcSerialCog iolink .cstr 1000 delms cogid iounlink cr
;

hcProgPin pinhi hcProgPin pinout

\\ sometimes Teraterm hangs here until you press enter key

c" AT+VERSION~h0D~h0A" hcSend
c" AT+ROLE?~h0D~h0A" hcSend
c" AT+UART?~h0D~h0A" hcSend
c" AT+NAME?~h0D~h0A" hcSend
c" AT+PSWD?~h0D~h0A" hcSend


             \ make sure these display 'OK' 
             \ otherwise it isnt working, powercycle to fix
10000 delms \ 10 seconds to read the screen


c" AT+NAME=HC05-230400-B~h0D~h0A" hcSend
c" AT+PSWD=1234~h0D~h0A" hcSend
c" AT+UART=230400,0,0~h0D~h0A" hcSend
c" AT+VERSION~h0D~h0A" hcSend
c" AT+ROLE?~h0D~h0A" hcSend
c" AT+UART?~h0D~h0A" hcSend
c" AT+NAME?~h0D~h0A" hcSend
c" AT+PSWD?~h0D~h0A" hcSend

hcProgPin pinlo 

\ after the hc05 is power cycled, the baud rate will change 

\ REMEMBER! HC05 Rx goes to PROP Tx
\ REMEMBER! HC05 Tx goes to PROP Rx

\ they have to criss-cross, the talker from one goes to the listener from the other

}}}

=== the correct output ===

If the HC05 communicates correctly, you see see this output on the terminal display:

{{{
Prop0 Cog6 ok
fl
Prop0 Cog5 ok

Prop0 Cog5 ok
27 wconstant hcProgPin
Prop0 Cog5 ok

Prop0 Cog5 ok

Prop0 Cog5 ok
26 wconstant hcRx
Prop0 Cog5 ok

Prop0 Cog5 ok
25 wconstant hcTx
Prop0 Cog5 ok

Prop0 Cog5 ok
38400 4/ wconstant hcBaud \ or use this line for the KEY-HI-POWERON method for 38400 baud
Prop0 Cog5 ok

Prop0 Cog5 ok
0 wconstant hcSerialCog \ cog0 will talk to the HC05 for programming
Prop0 Cog5 ok

Prop0 Cog5 ok
hcSerialCog cogreset 100 delms

CON:Prop0 Cog0 RESET - last status: 0 ok
Prop0 Cog5 ok
c" hcRx hcTx hcBaud serial" hcSerialCog cogx 100 delms
Prop0 Cog5 ok
1 hcSerialCog sersetflags
Prop0 Cog5 ok

Prop0 Cog5 ok

Prop0 Cog5 ok
: hcSend
cogid hcSerialCog iolink .cstr 1000 delms cogid iounlink cr
;
Prop0 Cog5 ok

Prop0 Cog5 ok
hcProgPin pinhi hcProgPin pinout
Prop0 Cog5 ok

Prop0 Cog5 ok

Prop0 Cog5 ok
c" AT+VERSION~h0D~h0A" hcSend
+VERSION:2.0-20100601

OK


Prop0 Cog5 ok
c" AT+ROLE?~h0D~h0A" hcSend
+ROLE:0

OK


Prop0 Cog5 ok
c" AT+UART?~h0D~h0A" hcSend
+UART:9600,0,0

OK


Prop0 Cog5 ok
c" AT+NAME?~h0D~h0A" hcSend
+NAME:HC-05

OK


Prop0 Cog5 ok
c" AT+PSWD?~h0D~h0A" hcSend
+PSWD:1234

OK


Prop0 Cog5 ok

Prop0 Cog5 ok

Prop0 Cog5 ok
\ make sure these display 'OK'
Prop0 Cog5 ok
\ otherwise it isnt working, powercycle to fix
Prop0 Cog5 ok
10000 delms \ 10 seconds to read the screen
Prop0 Cog5 ok

Prop0 Cog5 ok

Prop0 Cog6 ok

}}}


== Disconnect P22 Green wire on Quickstart poition 23 ==

After the script is run, the HC05 is configured.

Disconnect the Green wire from Prop pin 27 (Quickstart connector postion 28)

You will not need to reconnect this again, unless you want to change the ID of the HC05 or otherwise reconfigure it. 

You can use the pin for another device if needed.  The suggestion is to leave this pin open until all the othe pins are consumed, just in case. 

== Power Cycle the HC05 ==

This allows the changes (baud rate, name, etc) to "take".


= Continue the Bluetooth setup =

Return to the LittleRobotBluetooth page  to finish setting up the bluetooth link.


LittleRobotBluetooth


= A difficult HC05 =

One HC05 would not respond at any baud except 38400, and only using the key HIGH at power up.  

I had to set to baud to 38400 using the scripts, then program the part to talk at 38400, then make a special Devlernel.spin that uses 38400 instead of 230400.  

So even though I got a funky HC05, I was still able to get it going. 

== The Fix ==

TO FIX:  KEY HIGH AT POWER UP 38400 BAUD

If you run the script and you don't get then responses expected:

Unplug the RED v3.3 wire for a few seconds, then plug it back in again. Per the datasheet, this is "Set KEY pin 34 high, then apply power.  This sets mode to 38400N1" (38400 baud, no parity,1 stop bit). 

In the Hc05-06.f file, in the HC05 section, around the 17th line, 

Edit the script from:

{{{
9600 4/ constant hcBaud
}}}

To:

{{{
\ 9600 4/ constant hcBaud

38400 4/ constant hcBaud

}}}

and re-run the script. 

== Set the HC05 baud ==

If 230400 does not work, try 38400, that worked for me. 

== Set the DevKernel Baud ==

Burn the Quickstart EEprom with Devkernel set to the same baud rate as the HC05.  I used 38400, that worked for me.

== Set the terminal Program baud ==

I set Teraterm to 38400 to match the HC05 and the quickstart.  Now it works fine. 

== device name ==

It may be useful to try device name 

  * HC05-38400-A 

for a problem device.  For example the HC05 that would communicate and program at only 38400 baud, instead of 230400. 


== Finally working ==


 NOW it works! Whew! that was tough.  Good thing to read the datasheet when things don't go exactly as hoped. 