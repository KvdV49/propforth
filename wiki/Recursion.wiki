#summary Recursion in Proforth

= Recursion =

Recursion is when a function calls itself. 

In forth, we can have a reference to the same function with a function definition.  The word "recurse" make a function call itself again.

Caskaz got this from  Sal, and posted it in the rpopforth 5.0 thread

http://forums.parallax.com/showthread.php?138399-Propforth-5.0-is-available-for-download&p=1145116&viewfull=1#post1145116

= Code =

This code implements recursion

{{{
lockdict
: recurse lastnfa nfa>pfa w, ; immediate
freedict

}}}

Here is Caskaz's example of how its used:

{{{
\ ( n1 -- n2 )  n2 = n1 X (n1-1) X (n1-2) X . . . X 1
: factorial
       dup 0 <=
               if
                   drop 1
               else
                   dup 1- recurse u*
               then
;

\ ( n1 -- n2 )  n2 = n1 X (n1-1) X (n1-2) X . . . X 1
: factorial_test factorial . cr ;

: ft factorial_test ; \ so its shorter to type

: ftl  
     0 begin
            cr 
            dup . 
            dup ft
            1+
       0 until 
; \ this example work correctly for values up to 12
  \ the value displayed for 13 is incorrect, it has already overflowed
  \ the routine finally crashes after 25


}}}

In this example, `factorial` takes a number off the stack.
If the number is less than or equal to 1, the function returns 1
Otherrwise, it decrements the number, call itself, and does unsigned multiply on the result.

The affect is the factorial function. 

= Recursion for FFT (under construction) =

From heater:

" there is a recursive definition of the FFT. It's not quite as 
fast as the normal style we see and it needs 50% more buffer space but it occurs to me that Forth should be well suited to a recursive approach what with being stack based."

== Requirements ==

 * define a word, call it FFT, 
 * FFT  takes four parameters off the stack, call them: x, y, n, s,
 * FFT needs to be able call itself twice,
   * Once with parameters x, y, n/2, s*2  
   * And again with: x+s/2, y+n, n/2, s*2
 
 * Then FFT will do a bunch of processing using the original value of n it was passed and the global input/output buffers.
 
 * It should do nothing when n is zero.
 


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages