#summary Using Minicon on Linux as termianl program
#labels v5.5,terminal,linux,minicom

= Introduction =

If one switches from Windows to Linux, Oracle Virtualbox is needed to run a virtual WindowsXP session, to initially run the Proptool.

After that all we need is a terminal program to talk to the propforth command line over serial , directly from linux.

One option for a terminal communication program is minicom

= Install Minicom =

{{{
sudo apt-get minicom
}}}

after your administrator password, select the defaults for the options; it installs

= Help for minicom =

Look at the MAN  pages, they are pretty complete 

{{{
man minicom
}}}


= Setup Minicom =

{{{
sudo minicom -s
}}}

If you don't use sudo, it won't let you save your changes to the setup

==  BAUD 230400 ==

there isn't a specific selection for 230400, but by pressing 
{{{
A -<next> 
}}}
it changes to the proper 230400

== USB ==

=== find device ID ===

In a terminal, determine which ID is the usb converter

{{{
dmesg | grep tty
}}}

You should see and output the describes the USB device you are looking for
{{{
braino@box0:~$ dmesg | grep tty
[    0.000000] console [tty0] enabled
[    1.301798] serial8250: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
[    1.324185] 00:08: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
[224734.385147] usb 5-2: FTDI USB Serial Device converter now attached to ttyUSB0
[224736.280339] ftdi_sio ttyUSB0: FTDI USB Serial Device converter now disconnected from ttyUSB0
}}}

So mine is on `ttyUSB0`

===  set serial port ===

  * sudo minicom -s
  * serial port setup
  * a -device: /ttyUSB0

/dev/ttyusb0

* If it gives an error message DEVICE NOT PRESENT, it can be that the virtual XP session is still running, and has control of the USB to serial converter.  To release the USB from virtualbox,

In virtualbox under 
  * devices
  * USB devices

Un-check the USB to serial converter

=== other settings ===

The modem configuration settings in minicom are no needed, make these blanks:

  * modem and dialing:
     * init string - st? build?
     * reset string - sc st?
     * dialing prefix - blank
     * hangup string - blank (hangup will try to exit but will just leave you with the form command line running, you have to kill the terminal to end

In fact, it look like the `(ctl-z a)` help and configuration menu stops working after a bit.  More if I figure that out...

OK its `(ctl^A Z)`  .  I guess it works better when I use the correct key.

= TRIGGER with <ENTER> =

By default, LAC triggers when you press the enter key

Run LAC

hit enter, and see the display get drawn.  If it scrolls of the bottom, adjust you window size. The output has a line for each I/O line, a command header, and intermediate haders for the I/O lines display. .   

The display window needs at least 63 lines to full display with out scrolling.

OPTIONALLY we can edit the LAC code to remove some intermediate headers to reduce the out put display size.  (do this later.

Touch various quckstart pads to light LEDs.

Hit enter to see the LAC i/o lines dispay change to reflect the states of the pads (on pin 0-7) and the LEDS (on pin 16-23)

== change sample frequency to a LONG interval ==

The default sample frequency is 40 clocks per cycle. When tringgered, LAC samples at this rate until the buffer (free memory) is filled. 

Change the sample frequency using the `ASDFG` keys (caps) to increase the sample time delta (by 1, 10, 100, 1000, 10000 cycles, respectively); and using the asdfg keys (lowercase) to decrease the sample time delta (by 1, 10, 100, 1000, 10000 cycles, respectively)

touch pads and resample to see changes

Notice is you set the sample rate to 40,000 cycles (G,G,G,G) this is about the highest it can go. It takes a long time (almost 2 seoncds to sample and display.  You can LIGHTLY lay your finger across several pad on the quickstart, some some of the LEDs flicker dimly. The sample will show the I/O lines toggling for the flickering LEDs. 

=== change the sample frequency to a short interval ===

The shortest sampling period we do with the default congfiguration is 40 cycles. 

NOTICE that you can set the sample frequency down to 1 cycle. BY DEFAULT, the lowest we can go is 40 cycles, this uses 1 cog to do the sample, and save the data to free hub memory.  It can't function reliably any faster in this configuration.

By changing the configuration in LAC, we have TWO more options:

  * use more cogs to sample faster, capture to HUB memory
  * use a single cog and sample VERY FAST, capture to COG memory.  The cog memory captures are much smaller.  But in this case we tend to be looking at very fast events, so this is enough.  (If its not use the other method, of course)

Setting the different capture configuration is beyond the scope of this exercise, check the LAC source code for details.

= TRIGGER  from PIN STATE TRANSITION =

We can change the default so a pin state transistion cuases the sampling to trigger.

Lets make the sampling trigger when we touch button pad 4.


 < this is where I ended >



- end 20130322 -