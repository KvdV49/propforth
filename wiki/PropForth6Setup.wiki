#summary Setup PropForth 6.0 prototype.

= Introduction =

These are the instructions for setting up PropForth 6.0 on a windows PC.

PropForth 6.0 is available to team members.  Contact braino if you want a copy of the zip file.  This is not ready for public release. 

-----

= Windows PC =

For the time being, windows PC is required. We need PROPELLANT to compile the SPIN source files.  Linux support will be included as the tools become available. 

-----

= Set Up GO language =

Set up Go Language according to the instructions.

If you are upgrading from a previous configuration (e.g. from PropForth 5.5) 

In START -> Settings -> Control Panel -> System:
i
Advanced -> Environment Variables -> System Variables:

Edit or create the environment variable as follows.

== HOME ==

Create an environment variable HOME.  If there was an environment variable HOME in the USER VARIABLES section (I  think this was per the pf5.5 instructions), remove the definittion from USER VARAIBLES and create a HOME environment variable in System Variable. 

HOME is the location of the Go source files.  My original path may have been created by the Go install, it was in My Documents and had a crazy long path.  These tend to choke if they are too long, so I made my Propforth directory 

C:\PropForth6.0

and the therefore the definition for HOME is

{{{
HOME  C:\PropForth6.0\
}}}

Simply create this directory of C:, and unzip the 'PropForth' 6.0 archive.

== GOROOT ==

GOROOT is the location of the GO language source files. 

Minie is instlled at 
i
C:\go

so the definition for the GOROOT environment variable is

{{{
GOROOT C:\go
}}}

== PATH ==

The PATH varriable need to include the path to the GO executatbles.  These are in 

C:\go\bin on my rig.  

{{{
PATH %systemroot%\system32\; < a bunch of other junk> ; C:\go\bin
}}}

-----

= Unzip 2013-12-15-mygozip.file =

Our email won't let us send executable files.  So we renamed the zip archive from 

2013-12-15-mygo.zip

to

2013-12-15-mygozip.file

and we were able to send this via email.  Simply rename this file back from 

2013-12-15-mygozip.file

to

2013-12-15-mygo.zip

Extract the contents of this file to youur newly created 

C:\PropForth6.0

directory

-----

= Run goshell.bat =

Navigate to the Propforth 6.0 directory. 

Look at the contents of goshell.bat with MORE or using a text editor such as notepad, etc.

Notice the line 

{{{
 set PROPFLOWCONTROL=1
}}}

FLOWCONTROL MUST BE ON for the build process.  You can change it so flow control is OFF for other purposes, but you would have to use fl to loading source code files.  So leave flow control on for now, we'll cover turning it off and defining fl elsewhere if it comes up (it won't).

Double click goshell.bat to run the configuration script

------

= Test the setup =

The first time through, expect to have to futz with the environment variables.

Also expect to have to recompile a couple programs, this is fairly simple and painless, and only needs to be done once. 

== TEST GO ==

From the command prompt (after running goshell.bat) type go:

{{{
Go is a tool for managing Go Source Code

...
}}}

You should see the 20 lines or so of go prompt.  If you see this Go is set up.  Procede to the next step, of go back nad futz with go installation.

== Test GoTerm ==

From the command prompt (after running goshell.bat) type goterm:

You should see the page or so of usage instructions for goterm.  If not (only the first time), recompile goterm.  (By default, the archive is compiled for Sal's 64 bit machine.  If you have a cheap old 32 bit machine like me, we recompile). 

=== recompile goterm ===

CD to  C:\PropForth6.0\mygo\pkg\windows_386

{{{
cd C:\PropForth6.0\mygo\pkg\windows_386
}}}

there should be three or fou files that end in .a

Delete all the files there.  

From the command prompt window where goshell.bat was run type:

{{{
go install goterm
}}}

The should be no error message, or any message of any kind, and the prompt should return a few seconds later (or immediately if you have a fast machine). 

Test goterm as above. 

{{{
C:\PropForthv6.0\mygo>goterm
error: %!s(<nil>)
usage: goterm [ipaddr:port | com_port baud flowcontrol[0|1]] [commands]*

Commands - blank lines ignored, buffered input hit <ENTER>, ${environmet_variable} is expanded if defined
Environment variables in the form $XXX are translated to hXXX by SXW (where XXX are valid forth hex characters including _)

...
}}}

If you see the goterm usage instructions, the goterm program is properly compiled.

= Install pF6.0 BootOptimizeKernel.spin =

BootOptimizeKernel.spin

= load PF6.0 boot kernel =

navigate to 

{{{
C:\PropForthv6.0\mygo\V6.0\kernels\MAKE\results\outputFiles
}}}

and click on 

{{{
BootOptimizeKernel.spin
}}}

and load BootOptimizeKernel.spin using the proptool.

Remember, if it say comportnot found, you left teraterm running on the comport. Close teraterm first, then load the kernel using proptool.



== GOPROXYTERM ==

GoProxyterm is the new bit in PropForth 6.0

It uses properly implemented flow control.  This eliminated the need for the fl (fastload) word.  Now, we can use ANY PC capabile of 230400 baud on the serial port. if the PC is slow, the build process will wait.  We no long have to deal with overun on source load. :0

compile goproxyterm.  From the command prompt window where goshell.bat was run type:

{{{
go install goproxyterm
}}}

As withgoterm, the command prompt should return almost immediately with no error message.

=== Test GOPROXYTERM ===

From the command prompt window where goshell.bat was run type:

{{{
goproxyterm
}}}

You shoud\ld see:

{{{
C:\PropForthv6.0\mygo>goproxyterm
Starting: goproxyterm  0 0 100 200 0
2013-12-15 14:43:05.255972 -0600 CST Using 2 CPUs
2013-12-15 14:43:05.255972 -0600 CST error: Incorrect number of arguments
usage: goproxyterm comPort baud rawPort telnetPort debug[0-3]

C:\PropForthv6.0\mygo>
}}}

Spiffy!  OK, this is somethingwe just caught, there is a copy paste in the goproxyterm instructions. it says telnetprot is the fouth arguement. This is not so, and have been corrected for the next iteration.  The telnet port is NOT included as an arguement, it is automatically assumed to be rawport+100.  There is also a debug port which is automatically rawport + 200. Anyway the instruction should look like this:
{{{
usage: goproxyterm comPort baud rawPort debug[0-3]
}}}

Assuming we are using com22 (I have a lot of USB serial devices), we always use 230400 buad these days, we usually use 3000 as rawport, and we want debug on max so we can see everything for the time being.  So we would use:

{{{
goproxyterm com22 230400 3000 3
}}}

This of course is still from the window where goshell.bat was run.

If everything is finally setup, you should seesomething like:

{{{
C:\PropForthv6.0\mygo>goproxyterm com22 230400 3000 3
Starting: goproxyterm com22 230400 3000 3100 3200 3
2013-12-15 14:56:32.427847 -0600 CST Using 2 CPUs
Started:  goproxyterm com22 230400 Raw:3000 Telnet:3100 Debug:3200 3
        [0[1]{02}]
2013-12-15 14:56:32.490347 -0600 CST Listening on 127.0.0.1:3000
2013-12-15 14:56:32.505972 -0600 CST Listening on 192.168.0.235:3000
2013-12-15 14:56:32.505972 -0600 CST Listening on 127.0.0.1:3100
2013-12-15 14:56:32.521597 -0600 CST Listening on 192.168.0.235:3100
2013-12-15 14:56:32.521597 -0600 CST Listening on 127.0.0.1:3200
2013-12-15 14:56:32.521597 -0600 CST Listening on 192.168.0.235:3200
2013-12-15 14:56:32.521597 -0600 CST READY

}}}

Your rig is set up and ready to go.


= terterm direct to virtual comport =





= TERATERM local host =

Now we can talk to the propforth command promt using teraterm.

The settings for teraterm are different now that we use flow control.

Start teraterm. 

Connect to the prop using File -> new connection -> TCP/IP ->  Host: 'localhost'

Recall that goproxyterm is already talking on the USB serial virtual comport (com22 in my case).

Note: if you tyr to connect to loacal host and t says connnection refused, then goproxyterm is notlistening.  Close a bunch of windows, rerun goproxyterm with the proper parameters, andtry again after youget the "Listening" message.

NOTiCE that in Teraterm SETUP -> TERMINAL 

must be changed to CR+LF now.

SAVE this in the teraterm default SETUP -> SAVE SETUP ... 

TERATERM.INI

= Test PF6.0 =

PF6.0 is a VERY MINIMAL dictionaryat this time. There is no "words" commnd (with formating, but the is wl for "words list".

type in wl to see the list of forth words

{{{
wl
}}}

Notive tht the goproxyterm window also displays the character and additional diagnostics as the words list scrolls by.

= Build Automation =




= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages