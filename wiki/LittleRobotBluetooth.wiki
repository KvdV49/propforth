#summary HC05 and HC06 Bluetooth for Little Robot(tm)
#labels HC06,LittleRobot,bluetooth,v5.5

<wiki:toc max_depth="9" />

= Introduction =

The HC05 and HC06  Bluetooth module allows communication with the prop via bluetooth.  No cables are needed after initial programming. 

This pages covers the immediate set up steps for the HC06.  If you have problems, or want to use the hc05, see

http://code.google.com/p/propforth/wiki/LittleRobotBluetoothDETAILS

for addditional details.

= HC06 =

The workshop is using the HC06 modules mounted on a 4 or 6 pin carrier board.  only Vcc (3.3v), GND, Rxd and Txd are used.

== Hardware connections ==

Connect Vcc to 3.3volts.  This is different from all the other parts, the connection is for HC06 Vcc goes to 3.3 on the quickstart. 

Connect GND to Vss as normal.

Connect HC06 - Tx tp pin 26

Connect HC06 - Rx tp pin 27

If you have a 6 pin HC06, there are two more pins that are not connected.  These are only used initialization and troubleshooting. Don't worry about connecting KEY to P1.  We only do this if the HC06 is stubborn.

==  Power On ==

When you apply power, the STATUS LED on the HC06 should blink.  This means the HC06 is ready.

If the HC06 STATUS LED does NOT blink, pull the power wire for a second or two, and reconnect.  Sometimes they come up flashing every time, sometimes they only come up every other time.  This is fine for our situation. 

== Configuration Scripts ==

The following is a modification of the script found in bot.f and QSbot.f.  Feel free to modify these script once you are comfortable with their action. 

The HC06 need to be configured rather than left as default.  The names need to to be unique and the baud needs to be set from 9600 to 230400.  This is typically done before the session; each manufacturer tends to set something just a little "off" from normal. This instuction assume pre-configured modules with unique names and 230400 baud. 

Full Instructions for configuring the HC06 can be found on this wiki, use at your own discretion. 

= Pair with an Bluetooth master device =

To pair with an Android or windows device:

 * the red LED must be blinking 
 * Scan for the HC06 using an android device pairing screen.  The new name should be displayed. 
 * Pair with the device.  It should be listed as PAIRED DEVICE.  The red LED will continue to blink (until you CONNECT via blueterm)

= Connect to the HC06 =

From your terminal program:
 * Tera term on windows over bluetooth
 * blueterm terminal emulation app on Android
 * GREEN termninal emulation and touch interface app on android

Find Connect Device.  Select the HC06, it will display the name you set. The RED LED on the HC06 will flash, and stay on solid when the divice is connected. 

The terminal will not respond yet, we have to set up the auto boot.f scrip still. 

= Auto BOOT.F for HC06 testing =

Use the following autoboot script to check the bluetooth setup.

This is a trimmed version of the auto boot.f script.  It just switches the prop serial I/O pins to use the HC06 pins (26 & 27)

After power cycle or reboot, the prop serial  I/O pins will switch to the bluetooth pins.  You can connect via blueterm or GREEN.

REMEMBER:  YOU MUST copy this to your editor, and paste it from there.  It doesn't work it you copy from the browser and paste directly to the terminal.

{{{
fl

fswrite BTtest.f

\ green wire - this is not used on the carrier mounted modules
\ 1 wconstant hcProgPin 

\ white/orange wire - QSbot RXD to p27
27 wconstant hcRx

\ white/green wire - QSbot TXD to p26
26 wconstant hcTx

\  initally they come up at 9600,  switch this after we set it to 230400
\ 9600 4/ wconstant hcBaud
\ 230400 4/ wconstant hcBaud 
\ 0 wconstant hcSerialCog
\ hcSerialCog cogreset 100 delms
\ c" hcRx hcTx hcBaud serial" hcSerialCog cogx 100 delms
\ : hcSend cogid hcSerialCog iolink .cstr 1000 delms cogid iounlink cr ;

: onreset6
  fkey? and fkey? and or h1B <>
if
     $S_con iodis $S_con cogreset 100 delms
     c" hcRx hcTx 57600 serial" $S_con cogx 100 delms
     cogid >con
then
     c" onreset6" (forget)
;

...

fswrite boot.f

hA state orC! version W@ .cstr cr cr cr
: findEETOP
0
h100000 h8000
do
i t0 2 eereadpage
if
leave
else
i h7FFE + t0 3 eereadpage
if
leave
else
drop i h8000 +
then
then
h8000 +loop
;

c" boot.f - Finding top of eeprom, " .cstr findEETOP ' fstop 2+ alignl L! forget findEETOP c" Top of eeprom at: " .cstr fstop . cr
c" boot.f - Loading BTtest.f~h0D~h0D" .cstr hA state andnC!
fsload BTtest.f
c" boot.f - Loaded BTtest.f~h0D~h0D" .cstr hA state andnC!
c" boot.f - DONE PropForth Loaded~h0D~h0D" .cstr hA state andnC!

...



cr

}}}

== Verify the Bluetooth connection ==

After reboot or power cycle, the prop will switch the serial connection to the blue tooth I/O pins.

The terminal program on a connected device will dispay the regular propforth prompt. 

Type a propforth command like 'words' to show the connection is working. 

= Proceed to the final QSbot.f program =

Leave the above programs BTtest.f aand boot.f in the eeprom memory.

Use the file systems list function 
{{{
fsls 
}}}

to display that the files are present.  

The BTtest is loaded by boot.f or other diagnostics as needed.  

The boot.f file is superceded by the next boot.f later on, so fine left as it is.  

Remembe, you can drop the last file in the list ussing the fsdrop command
{{{
fsdrop
}}}

Or you can remove all the files at once using the fsclear command.

{{{
fsclear
}}}

Be aware that you need to reload all the drivers in order after fsclear. 






-----

= TROUBLE SHOOTING =

The HC06 RED LED MUST BE BLINKING to program the HC06 via the PC terminal scripts.  Disconnect and reconnect the HC06 Vcc to put the HC06 into blink mode

The HC06 RED LED MUST BE BLINKING to pair with the bluetooth device terminal program.  Disconnect and reconnect the HC06 Vcc to put the HC06 into blink mode

The HC06 RED LED MUST BE BLINKING to connect to the bluetooth device terminal program.  Disconnect and reconnect the HC06 Vcc to put the HC06 into blink mode

After the HC06 is PAIRED with your android device, the RED LED will continue to blinky

After the HC06 is connected to the android terminal program , the RED LED will stay lit continuously

If the auto boot.f command gives you trouble, press and hold the ESC key during boot.  This will skip the auto boot.f behavior.

To remove a bad copy of the boot.f script:

 * from the propforth command line:
 * type 'fsls' to list the current script files
 * type 'fsclear'  to remove the script name entry

To put in a fixed/modified script:

 * reload the script (copy and paste from your editor)
 * reboot

= NOTES =

== Data Sheet ==

There are several data sheets available.  They are all pretty much bad translations of the pretty bad chineese original. 

http://etang.co.uk/datasheet/hc06/Bluetooth_HC-06_datasheet%20by%20cn.pdf

http://www.wavesen.com/mysys/db_picture/news3/200951285105101.pdf

-----

= HC06 workshop preparation scripts =

Braino used this script to process a dozen HC06 in a row.

{{{
fl

\ for the HC06 -setup
\ green wire - this is not used on the carrier mounted modules
1 wconstant hcProgPin 

\ white/orange wire - QSbot RXD to p27
27 wconstant hcRx

\ white/green wire - QSbot TXD to p26
26 wconstant hcTx

\  initally they come up at 9600,  switch this after we set it to 230400
 9600 4/ wconstant hcBaud
\ 230400 4/ wconstant hcBaud 

0 wconstant hcSerialCog

hcSerialCog cogreset 100 delms

c" hcRx hcTx hcBaud serial" hcSerialCog cogx 100 delms

: hcSend cogid hcSerialCog iolink .cstr 1000 delms cogid iounlink cr ;

hcProgPin pinhi hcProgPin pinout

c" AT" hcSend
c" AT+VERSION" hcSend

\ ===========================================
\ hc06 - programming scripts

c" AT" hcSend
c" AT+VERSION" hcSend

\ MUST pause before and after setting the name; must be 9600

\ c" AT+NAMEQSbot-CPL-01-of-12" hcSend
\ c" AT+NAMEQSbot-CPL-02-of-12" hcSend
\ c" AT+NAMEQSbot-CPL-03-of-12" hcSend
\ c" AT+NAMEQSbot-CPL-04-of-12" hcSend
\ c" AT+NAMEQSbot-CPL-05-of-12" hcSend
\ c" AT+NAMEQSbot-CPL-06-of-12" hcSend
\ c" AT+NAMEQSbot-CPL-07-of-12" hcSend
\ c" AT+NAMEQSbot-CPL-08-of-12" hcSend
\ c" AT+NAMEQSbot-CPL-09-of-12" hcSend
\ c" AT+NAMEQSbot-CPL-10-of-12" hcSend

\ c" AT+NAMEQSbot-CPL-11-of-12" hcSend

c" AT+NAMEQSbot-CPL-12-of-12" hcSend

\ MUST pause before and after setting the name; must be 9600

c" AT+PIN1234" hcSend
c" AT+PN" hcSend

\ =============================================

\ hc06 - programming scripts BAUD

\ note baud change immediately on hc06!!!!!
\ don't do this until you've set everything else.
\ c" AT+BAUD9" hcSend
c" AT+BAUD9" hcSend

\ switch back to 9600
\ c" AT+BAUD4" hcSend
\ use this if SETNAME did not work

\ =============================================
\ Get Authenticated Device Count HC05 only
\ Use Get Authenticated Device Count to see if maybe there were too many pairings already.
\ Even if there is only one, resetting this seems to have made some units pair.
\ AT+ADCN?
\ c" AT+ADCN?" hcSend
\ AT+ RMAAD
\ c" AT+ RMAAD" hcSend
\ =============================================
\ HC06 - final test 230400 baud

fl

\ REMEMBER the HC06 LED must be blinking!
\ If it isn't , disconnect Gnd, and reconnect. It will blink
\ green wire - this is not used on the carrier mounted modules
1 wconstant hcProgPin 

\ white/orange wire - QSbot RXD to p27
27 wconstant hcRx

\ white/green wire - QSbot TXD to p26
26 wconstant hcTx

\  initally they come up at 9600,  switch this after we set it to 230400
\ 9600 4/ wconstant hcBaud
230400 4/ wconstant hcBaud  \ NOW we are 230400 !!!

0 wconstant hcSerialCog

hcSerialCog cogreset 100 delms
c" hcRx hcTx hcBaud serial" hcSerialCog cogx 100 delms

: hcSend cogid hcSerialCog iolink .cstr 1000 delms cogid iounlink cr ;

hcProgPin pinhi hcProgPin pinout

c" AT" hcSend
c" AT+VERSION" hcSend

\ =============================================
\ =============================================
\ =============================================

\ HC06 - final code auto boot switches to bluetooh comms

fl

fswrite BTtest.f

\ green wire - this is not used on the carrier mounted modules
\ 1 wconstant hcProgPin 

\ white/orange wire - QSbot RXD to p27
27 wconstant hcRx

\ white/green wire - QSbot TXD to p26
26 wconstant hcTx

\  initally they come up at 9600,  switch this after we set it to 230400
\ 9600 4/ wconstant hcBaud
\ 230400 4/ wconstant hcBaud 
\ 0 wconstant hcSerialCog
\ hcSerialCog cogreset 100 delms
\ c" hcRx hcTx hcBaud serial" hcSerialCog cogx 100 delms
\ : hcSend cogid hcSerialCog iolink .cstr 1000 delms cogid iounlink cr ;

: onreset6
  fkey? and fkey? and or h1B <>
if
     $S_con iodis $S_con cogreset 100 delms
     c" hcRx hcTx 57600 serial" $S_con cogx 100 delms
     cogid >con
then
     c" onreset6" (forget)
;

...

fswrite boot.f

hA state orC! version W@ .cstr cr cr cr
: findEETOP
0
h100000 h8000
do
i t0 2 eereadpage
if
leave
else
i h7FFE + t0 3 eereadpage
if
leave
else
drop i h8000 +
then
then
h8000 +loop
;

c" boot.f - Finding top of eeprom, " .cstr findEETOP ' fstop 2+ alignl L! forget findEETOP c" Top of eeprom at: " .cstr fstop . cr
c" boot.f - Loading BTtest.f~h0D~h0D" .cstr hA state andnC!
fsload BTtest.f
c" boot.f - Loaded BTtest.f~h0D~h0D" .cstr hA state andnC!
c" boot.f - DONE PropForth Loaded~h0D~h0D" .cstr hA state andnC!

...

cr  \ final cr in case pasted from web page



}}}


-----

= old section =

ignore this section, it was needed during editing and will be removed. 

-----

The following turn OFF the programming mode and resets the bluetooth prgramming and configuration cog that minds the HC06 pins (26 and 27)

{{{

hcProgPin pinlo 

1000 delms

hcSerialCog cogreset 100 delms

hcProgPin pinlo


}}}

-----

*CHECK - it maybe that the programming commands exectue, but won't "take" (won't be made permanent and saved) unless the KEY line (pin 1) is held high. *

* ALSO - it may be the athe KEY line must be held HIGH from POWER UP until the end of the configuration events;  rather than high for each command and lo between commands. IF this is the case, connect KEY to Vcc and execute the configuration commands*

-----

Now, the device should be fully programmed with it correct name and set to 230400 baud.

It should no longer respond at 9600.

Remove the old files from EEprom using 

{{{

fsls

fsclear

fsls

}}}

Replace the auto boot .f using the the following, and try the query command as at 230400:

xxxx

-----

== Pair the devices ==

The HC05 should be visible as a slave (pairable) device when re-powered

=== Windows XP ===

Run Blue Tooth Wizard 

The wizard should find a device, and display the name you provided in the the script. 

Enter your pin (as you assigned in the script, or 1234 if you left the default)

XP will add two COM ports, on incoming and one out going. 

The outgoing port is the one you will use with Teraterm.  The incoming port doesn't do anything, but has to be there. 

=== Android ===

  * Select Settings.  
  * Under (or near) WiFi find Bluetooth. 
  * select "Search for Devices" (upper right corner on Nexus)

You should see an eight(?) hex value address displayed very quickly. 

A short time later this will change to the name you assigned in the script.

Select this, and enter your pin you define in the script, or 1234 if you left the default.

==== Blueterm ====

You can now connect to this device using Blue term (the three dots in the lower right corner is the secret!)

= Auto Boot.f to Blue tooth =

At this point, the HC06 Bluetooth device has been configured and paired with your Android or windows device. 

Set the automatic boot.f script to switch to the bluetooth communication on reboot. 


{{{
fl

wswrite boot.f

}}}

reboot.  The device will auotmatically switch to bluetooth communications.

To stop the script from autobooting, hold the ESC and the the boot prcess will skip the boot process. 

- end -