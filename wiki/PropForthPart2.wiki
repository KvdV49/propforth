#summary Additional explanation for PropforthPart2.f
#labels v3.2

= Introduction =

The file [http://code.google.com/p/propforth/wiki/PropForthPart2 PropforthPart2.f] contains the remainder of the PropForth kernel, written in forth.

The first part is contained in [http://code.google.com/p/propforth/wiki/PropForthPart1 PropforthPart1.f]. 

= EEPROM memory access words =

The EEPROM page read and write words are defined at  are at the end of [http://code.google.com/p/propforth/wiki/PropForthPart1 PropforthPart1.f]

EW@ - fetch a 16 bit word from eeprom

EW! - store a 16 bit words to EEPROM

EC@ - fetch an 8 bit byte from EEPROM

Notice that are are no words defined for 

EC! - no word to store a byte to EEPROM

EL@ - no word to Fetch a long from EEPROM

EL! - no word to store a long to EEPROM

It was found that all these functions are not needed for the purposes of the kernel, and have not been implemented in order to save space.  If needed the user is free to implement them as extensions, or add them to the kernel.

= common developer diagnostic words =

Several prop specific development diagnostic words are included.

Please examine these.  Additional explanation will be provided in response to user questions. (The person writing this documentation has not used them and cannot comment further). 

= Additional definitions =

The word f_erase is included but the definition is commented out.

{{{
\ f_erase ( -- ) erase the word following from eeprom - DANGER - should be the last word only
\ or following words may get overwritten when a new file is written to eeprom
\ : f_erase parsenw dup if f_find dup if eeTop swap do FFFF i EW! 80 +loop else drop then else drop then ;
\ no more symbols available

\ wlastnfa is generated by the forth spinmaker word
}}}

Uncomment this definition if needed.  If you don't understand what it means, you probably should be very careful using it.  