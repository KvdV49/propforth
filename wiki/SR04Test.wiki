#summary Testing the SR04 with New Knowledge.

= Introduction =

Initially, the LittleRobot BOM specificed a 220-330 ohm resistor.  This was incorrect.  The new information is at:

http://forums.parallax.com/showthread.php/148489-SR04-5-volt-to-3.3-volt

and

http://forums.parallax.com/showthread.php/148527-Input-clamping-diode-5v-to-3.3-volt-Max-and-Min-resistors


= SR04 output issue =

The SR04 output (echo pin) is at 5 volts. This is too high for the Prop, which uses 3.3 volts.  A directly connection would very quickly damage the prop input. 

= The CORRECT SOLUTION(s)=

== The textbook solution is a voltage divider.  ==

=== 1.7k and 3.3k ===

This worked but the resistors might need to be changed again 

  * Use a 1.7k ohm resistor at the echo pin from the SRO4
  * use a 3.3k ohm resistor at the Prop input (pin 17 in Spring 2013 session)
  * connect the OTHER side of the 1.7k and 3.3k ohm resistors TOGETHER,  attach THE JUNCTION to ground.
  
I haven;'t figured out how to attach a picture here, but is you google for "5volt to 3.3volt voltage divider", you should get and image with correct connections.

I tested this and the S04 began to functihttp://www.parallaxsemiconductor.com/an010on, even on units that I thought may have been damaged. 

THIS STILL MIGHT BE TOO LOW!! 1.2 mA is too much!!
It needs to be 500 uA!!!

So 0.0012 A is too high, we want 0.0005 Amps maximum! 


= From that Parallax App 10 Note = 

Parallax appnote (#10) "Low-cost Bidirectional Mixed-voltage Interfacing" - interfacing 5V signals to the Prop using a resistor.

http://www.parallaxsemiconductor.com/an010

A single resitor inline should do the trick.

They calculate 4.6k as the minimum resistor value for 5 volt signals.

Test 4.6 K !!!!

= checking for damage =

At least 4 of the ten Ancona Bots from Spring 2013 had the incorrect resistor. Here is how we check the imputs

{{{
How can we test if the protection diode is damaged?
Apply 5V through a 3.3K resistor and measure the voltage on the pin. It should be around 3.9V if the diode is intact and functioning properly. 
}}}

= TEST CODE SR04test.f =

{{{

fl

fswrite boot.f

hA state orC! version W@ .cstr cr cr cr
: findEETOP
0
h100000 h8000
do
i t0 2 eereadpage
if
leave
else
i h7FFE + t0 3 eereadpage
if
leave
else
drop i h8000 +
then
then
h8000 +loop
;

c" boot.f - Finding top of eeprom, " .cstr findEETOP ' fstop 2+ alignl L! forget findEETOP c" Top of eeprom at: " .cstr fstop . cr
c" boot.f - Loading bot.f~h0D~h0D" .cstr hA state andnC!
fsload sr04test.f
c" boot.f - Loaded sr04test.f~h0D~h0D" .cstr hA state andnC!
c" boot.f - DONE PropForth Loaded~h0D~h0D" .cstr hA state andnC!

fsls

...

\ ------------------------------------------------------------

fswrite sr04test.f

1 wconstant build_sr04
[ifndef _sr04_trig
16 wconstant _sr04_trig
]
[ifndef _sr04_echo
17 wconstant _sr04_echo
]

variable _sr04_distance


: _sr04_measure
c" MEASURE" cds W!
4 state andnC!

_sr04_trig pinlo _sr04_trig pinout
_sr04_echo >m
_sr04_trig >m
begin

     dup _maskouthi dup dup drop _maskoutlo
     over dup dup dup
     cnt COG@
     rot2

     waitpne
     cnt COG@ swap -
     d_170_000 clkfreq */

     _sr04_distance L!
     d_60 delms
     \ d_200 delms
0 until
;

\ braino debug 20130610

: esc h_1B emit ;
: csi esc h_5B emit ;
: m ." m" ;    
: smallf ." f" ; 
: K ." K" ;
: semicolon ." ;" ;

\ v>c convert a value ( 0-9 ) for a digit character for emit 
: v>c h_30 + emit ;
\ .digits ( n -  ." emit as DECIMAL characters" ) for AT  convert 0-99 for emit
: .digits 
          dup h_9 > if h_0A u/mod v>c then \ greater than 9 mod decimal 10
          v>c ;
\ AT  ( x y - ) put cursor at x,y
: AT csi .digits semicolon .digits smallf ;

: home       csi ." 1;1f" ;
: clear      csi ." 2J" ; 
: preclear   csi ." 1J" ;
: postclear  csi ." 0J" ;
: cls home clear  ;

: dd _sr04_distance L@ . ; 

:  sr04 cls ." sr04 test " 

0 10 AT ." SR04 mm= ...." 

 begin 10 10 AT dd ."    " 100 delms fkey? swap drop until ; 

: Message cr cr ."  Type sr04 dd or d to start the test, esc to exit " cr cr ;


\ braino debug 20130610


: onreset6
cr ." INITALIZING SR04 sensor (cogs 2) in 2 second...." cr 2000 delms

fkey? and fkey? and or h1B <>
if
\ c" init_motorA" 0 cogx
\ c" init_motorB" 1 cogx
c" _sr04_measure" 2 cogx
 ."  motors and sensors initialized ... " cr cr
cog? 
then

Message 

cr ." RESETING on cog6 now ....  "  cr  

c" onreset6" (forget)

;

...

}}}


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages