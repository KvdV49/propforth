#summary Using the OLPC-XO for Propforth development
#labels Phase-Implementation,v5.0,v4.5,v5.5

<wiki:toc max_depth="9" />

= Introduction =

Originally I wanted a PC forth system to Host development for the PropForth.  The idea was that the same code and or techniques used on one would apply towards the other. 

While most work has been done using a standard PC (Windows, Mac, and Linux), the majority of the time the PC is only providing telent and disk services to the prop. 

Recently, the PC has been less necessary.

= OLPC =

The XO-1 from the One Laptop Per Child program (OLPC) has a forth boot firmware.  With a developer key, a user can quickly boot to forth, and need not endure the wait for the SUGAR user interface to get going. 

One has to know a bit about the XO in order to use it as forth only development terminal.  I don't, so I'm starting slow.  I'm going to use the OLP XO-1 as a terminal. 

== Pixel Qi Display ==

The OLPC has the Pixel Qi dual model (backlit/reflective) display

The display has a resolution of 1200 x 900. It's size is 7.5" diagonal, or 6 x 4 inches ( 152.4 x 101.6 mm), which gives a dot pitch of 200 dpi. It supports a color resolution of approximately 6 bits per color (262k colors). 

This is the most awesome little display for an indoor/outdoor device. 

= OLPC XO as a terminal for Forth =

== SUGAR Built in Terminal activity ==

By default, the XO has a terminal program which can access the USB ports. http://wiki.laptop.org/go/Terminal_Activity

We can use terminal to access the linux command line while running Sugar

 * Terminal is not displayed in the Favorite icon view by default
 * Switch from the activity icon view to the activity list view. 
 * find terminal activity
 * Click the star to display terminal in the icon favorites display

== Switch display from Sugar to Linux ==

from the user icon in the center of the favorite icons display, click settings (you'll figure it out after a minute)

Switch to Gnome

= from Unix (Fedora18) =

I do these linux commands from the linux display, but they should work from Sugar in the terminal display

= Minicon and Picocom=  

Make sure your wireless network connection is operating

install minicon and picocom. We only need one, I haven't decided which is better, so I'm installing both.  Having both doesn't hurt.

{{{
su -l
yum -y install minicom
}}}

{{{
su -l
yum -y install picocom
}}}

yum installs took about 5 or 10 minutes. 

I did these separately, there's a way to do them both together.

== var lock ==

we need to create a lock file for minicom (maybe picocom needs it too)

{{{
su -l 
chmod o+w /var/lock
}}}

== permissions ==

WE need to set permissions for the USB device

plug in the device (quickstart or SF02, or whatever)

The device shows up as /dev/ttyUSB0

Set the permissions so we can get to it using:

{{{
su -l 
chmod go+rw /dev/ttyUSB0
}}}


== aliases ==

In your home directory /home/MyUserName

find the hidden .bashrc file

edit .bashrc with gedit or other editor

Add these aliases to the end of the file

{{{
alias sf02='picocom -b 11520 /dev/ttyUSB0'
alias quickstart='picocom -b 230400 /dev/ttyUSB0'
}}}

Now, when sf02 is typed at the command line, picocom will be launched at 11520 baud on USB0

When quickstart is typed at the command line, picocom will be launched at 230400 baud on USB0

== running minicom ==

I think it always comes up as USB0 if only one converter is present. Additional USB serial converters are supposedly added sequentially. 

188 char	USB serial converters
		  0 = /dev/ttyUSB0	First USB serial converter
		  1 = /dev/ttyUSB1	Second USB serial converter


== configure minicom ==

sudo minicom -s

  * ports
  * /dev/ttyUSB0
  * 230400 8N1
  * Hardware Flow Control: No
  * Software Flow Control: No
  * save as dfl
  * exit

==== run minicom ====

minicom

<gets to propforth prompt>

= NOTES =

Thanks to stanford clark for the notes: http://stanford-clark.com/OLPC.html

*NOTE* If you see, each time minicom starts,
{{{
 /dev/ttyUSBx not Found
}}}
 * The permissions may be incorrect.  See the above steps for chmod
 * lock file may be missing. See above for lock file
 * device might not be plugged in and operating.  If its not plugged in, it does not remember /dev/ttyUSB0 until something is plugged in again

= editing forth source on the XO =

I tried this a while back.  It was awkward with the teeny keyboard, weird touchpad, and unfamiliar OS. 

With an external keyboard and mouse its not so bad, and might be better with wireless mouse and keyboard.  

But the stopping point point was proptool, which did not run on linux. Since we could not load from source, there was no need for editing programs, so I stopped this exploration. 

The Prop GCC project should give us SimpleIDE for the prop which is to work on linux. This is a likely option.

Prop GCC is expected 2014.

= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages