#summary Using the OLPC-XO for Propforth development
#labels Phase-Implementation,v5.0,v4.5

<wiki:toc max_depth="9" />

= Introduction =

Originally I wanted a PC forth system to Host development for the PropForth.  The idea was that the same code and or technicques used on one would apply towards the other. 

While most work has been done using a stand PC (Windows, Mac, and Linux), the majority of the time the PC is only providing telent and disk services to the prop. 

Recently, the PC has been less necessary.

= OLPC =

The XO-1 from the One Laptop Per Child program (OLPC) has a forth boot firmware.  With a developer key, a user can quickly bboot to forth, and need not endure the slow wait for the SUGAR user interface to get going. 

One has to know a bit about the XO in order to use it as forth only development terminal.  I don't, so I'm starting slow. 

== Pixel Qi Display ==

The OLPC has the Pixel Qi dual model (backlit/reflective) display

The display has a resolution of 1200 x 900. It's size is 7.5" diagonal, or 6 x 4 inches ( 152.4 x 101.6 mm), which gives a dot pitch of 200 dpi. It supports a color resolution of approximately 6 bits per color (262k colors). 

This is the most awesome little display for an indoor/outdoor device. 


== Hosting Forth development from a standard XO ==

By default, the XO has a terminal program which can access the USB ports. http://wiki.laptop.org/go/Terminal_Activity

The minicom program http://wiki.laptop.org/go/OpenEC opens a terminal session to the USB port.

Using a standard USB cable, the XO can runthe propforth prompt to a Quickstart board or a C3 with no additional power.

  === Note on internal serial ports ===

The serial ports available for developer access directly on the OLPC motherboard are the peripheral end of the connection, not the host?

http://wiki.laptop.org/index.php?title=OpenEC&section=9#Built-in_monitor_program

I did not crack open the case, or obtain a serial to USB converter for the internal serial ports.

== install minicon - requires network connection ==

  * terminal
  * su
  * yum -y install minicom

  < wait .... >

  finished

== running minicom ==

http://www.ubuntugeek.com/minicom-hyperterminal-replacement-in-ubuntu.html

http://linux.die.net/man/1/minicom


188 char	USB serial converters
		  0 = /dev/ttyUSB0	First USB serial converter
		  1 = /dev/ttyUSB1	Second USB serial converter

  ==== Start terminal program ====

terminal 

  ===== configurare minicom =====

sudo minicom -s

  * ports
  * /dev/ttyUSB0
  * 57600 8N1
  * Hardware Flow Control: Yes
  * Software Flow Control: No
  * save as ...

==== run minicom ====

minicom

<gets to propforth prompt>

*NOTE* For some reason, each timne I start minicom, it says /dev/ttyUSBx not Found

.. andI have to switch to the other one, alternating between /dev/ttyUSB0 and /dev/ttyUSB1

I don't know why or how to fix this

*NOTE* something times out after a couple minutes, and the /dev/ttyUSBx port is no longer available. After both ports time out, the OLPC needs to be reset before it works again. 

Could somebody clue me in as to whats going on and how to fix it. 

=== editing forth source on the XO ===

There are several option,

Sugar:
  * edit - activity cannot save files?
  * write - activity - saves in journal?

GNOME:
GNOME - uses directories etc, but is slow?

Sugar and Gnome: 
  * nano -text editor run in terminal, built in to 650

FORTH: 

  The openfirmware forth impementation has a simple blocks based editor capable of accessing the NAND flash, etc.  I started down this route, but got lazy.   This still seems like the fastest method, but requires special knowledge of the forth of the openfirmware and the OLPC-XO hardware.


=== saving forth source onthe XO  ===

=== loading forth source from the XO to the prop ===

= Loading a binary image from the XO to the prop =

= running proptool or BST on the XO =


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages