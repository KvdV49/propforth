#summary Propforth 5.0 preview notes
#labels 5.0

= Propforth 5.0 internally released 2011.10.10 =

Internal QA notes for final changes 

= KernelBUILD.txt = 

KernelBUILD.txt is a documentation file included in the release archive

The text is included here so it can include formatting

Comments are welcome

== BIG CHANGES in V5.0 ==

General descriptive text at the start of the file

 * hexadecimal characters must be uppercase

 * xABD will be interpreted as hex no matter what the base is

 * d1234 will be interpreted as decimal no matter what the base is

 * there is an optional line buffer mode which will not echo characters until cr is hit

 * backspace x08 is used, del x7F does not delete a character in the buffer

 * CR x0D is the line termination, LF x0A is not a line termination

 * CR is ouput as x0D, setup teraterm to receive CR+LF, and to transmit CR - _this was done to allow redirection of files easily to and from IO_

 * kernel modified and optimized

 * added ST@ ST! - _fast instructions to access and modify stack_

 * more assembler instructions can be dynamically added

 * assembler words are now dynamically loaded and cached - _this provides huge optimizations and space efficiency_

 * There are a few spin constants which allow the modification of:
  # tx pin
  # rx pin 
  # baud rate
  # cog used for the console serial driver
  # which cog starts up forth

== multi step process to build kernel - _versatile_ ==

The user may choose how the kernel is built to include different arrangements of options. 

PATH to Kerrnel files: 

*\kernels\BootKernel*

`PropForthStartKernel` 

- _slow io, slow multiply and divide, slow to interpret and compile, but very small and code runs fast. Error checking in place, but no error reporting. This kernel has extra symbols which are necessary for recompile but will be removed to shrink it still further._


`PropForthBootKernel` 

- _slow io, slow multiply and divide, slow to interpret and compile, but very small and code runs fast. Error checking in place, but no error reporting. This is minimum size. This kernel can be used for specialized apps.+

build 2011OCT04 10:10 20,400 bytes free in dictionary, 222 longs free per cog

*\kernels\BootKernel\BootOptimizeKernel*

`PropForthBootOptimizeKernel`

 - _Assembler optimizations, fast kernel. Error checking in place, but no error reporting. This kernel can be used for specialized apps.

build 2011SEP29 14:00 19,822 bytes free in dictionary, 176 longs free per cog

This kernel is the base for most kernels and applications.