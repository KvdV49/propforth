#summary Load programs to the prop from a chromebook

= Introduction =

Lots of school kids are getting chromebooks through the schools.

Some of the more advance members of the Parallax forums are working on loading program code to the propeller chip from a chromebook.  

http://forums.parallax.com/showthread.php/157215-Open-Propeller-Project-7-Programming-Propellers-from-a-Chromebook

This page test whether a geezer (me) can get a chromebook to load code to a prop using a chromebook (my daughter's).

I am starting with a virtual machine before I try the actual chromebook, so I won't get in trouble with the school if I mess something up.

= setup =

== virtual box ==

I loaded virtualbox on my linux PC

The virtual PC is running Linux Mint 17-64 MATE. 

== chromium ==

I tried loading the chromium development tools, using Martin_h's suggestion.

http://arnoldthebat.co.uk/wordpress/chromium-os/

but did not succeed.

== browswer == 

heater offered another approach.

http://forums.parallax.com/showthread.php/157215-Open-Propeller-Project-7-Programming-Propellers-from-a-Chromebook?p=1299403&viewfull=1#post1299403

I loaded Google chrome.  That worked.

Now to load extensions...

== heater's instructions ==

Attached is msrobots editor17 web IDE for Spin tweaked to work as a Chrome extension. You can try it out as follows.

http://forums.parallax.com/attachment.php?attachmentid=111638&d=1414349780

1) Unpack it some place. You will get a directory called editor17 full of goodies.

2) Install it into your Chrome browser by selecting "Tools" tools from the control menu and then "Extensions".

3) In the resulting extensions tab check the little "developer mode" box.

4) Click the "load unpacked extensions" button.

5) In the resulting file navigator select the editor17 directory,

6 ) Hit the launch button to run it. You will also have an icon for it in the Apps page.


Now. Sadly pretty much none of editor17 works properly as a chrome app at this moment, apart from the editor itself. I was hoping to find time to have a look at it.

Even if it all worked as well as it does when served up from a web page it lacks any way to program the Prop apart from sending the binary to the server and having the server do the loading into the Prop.

What we need is to add serial port loader support. This requires:

1) Creating a loader program, probably by converting the loader from PropellerIDE into Javascript using the Emscripten compiler.

2) Integrating that into the app. 

(zip is in post attachment)



= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages