#summary this page is underconstruction.

<wiki:toc max_depth="9" />

= A detailed technical description of the !PropForth Interpreter =

The !PropForth interpreter is implemented in Propeller assembler. Before proceeding with details of the interpreter review the PropForthDictionaryStructure.

There are 2 stacks used by the interpreter. The main data stack is 32 longs of cog memory, and the return stack which is also 32 longs of cog memory.

The top of the return stack is pointed to by the cog long variable rsPtr.

The top of the data stack is actually buffered by the cog long variable stTOS. The cog long variable stPtr thus points to the 2nd element on the main data stack.

Both stacks are checked for over/underflow every time data is pushed or popped.

The TOP OF STACK is a special case.  Action that affect ONLY the top stack item are NOT checked for overflow and underflow; the value is only checked when the item GETS USED.   IF YOU ENCOUNTER AN ISSUE with this, please post on the forums.  More detail can be provided for the particular case. 

There is an additional cog long variable IP. This variable points to the current forth word that is currently being executed.

=== Example Code and Trace ===
{{{
: 10+ 10 + ;
: 12+ 2+ 10+ ;
: test 20 12+ . ;

ST:
RS: 2B0A:17B0 execute 2BFC:2AD8 interpretpad 3878:2BBE interpret
> {4B70 006A 13C0} 0020
  {4B74 4B62 4B5E} 12+
  {4B76 24EA 24E8} .
  {4B78 0073 13B0} ;

ST: 00000020
RS: 2B0A:17B0 execute 2BFC:2AD8 interpretpad 3878:2BBE interpret
  {4B70 006A 13C0} 0020
> {4B74 4B62 4B5E} 12+
  {4B76 24EA 24E8} .
  {4B78 0073 13B0} ;

ST: 00000020
RS: 4B74:4B62 12+ 2B0A:17B0 execute 2BFC:2AD8 interpretpad 3878:2BBE interpret
> {4B62 1B44 1B40} 2+
  {4B64 4B54 4B50} 10+
  {4B66 0073 13B0} ;

ST: 00000022
RS: 4B74:4B62 12+ 2B0A:17B0 execute 2BFC:2AD8 interpretpad 3878:2BBE interpret
  {4B62 1B44 1B40} 2+
> {4B64 4B54 4B50} 10+
  {4B66 0073 13B0} ;

ST: 00000022
RS: 4B64:4B54 10+ 4B74:4B62 12+ 2B0A:17B0 execute 2BFC:2AD8 interpretpad 3878:2BBE interpret
> {4B54 006A 13C0} 0010
  {4B58 1426 1424} +
  {4B5A 0073 13B0} ;

ST: 00000010 00000022
RS: 4B64:4B54 10+ 4B74:4B62 12+ 2B0A:17B0 execute 2BFC:2AD8 interpretpad 3878:2BBE interpret
  {4B54 006A 13C0} 0010
> {4B58 1426 1424} +
  {4B5A 0073 13B0} ;

ST: 00000032
RS: 4B64:4B54 10+ 4B74:4B62 12+ 2B0A:17B0 execute 2BFC:2AD8 interpretpad 3878:2BBE interpret
  {4B54 006A 13C0} 0010
  {4B58 1426 1424} +
> {4B5A 0073 13B0} ;

ST: 00000032
RS: 4B74:4B62 12+ 2B0A:17B0 execute 2BFC:2AD8 interpretpad 3878:2BBE interpret
  {4B62 1B44 1B40} 2+
  {4B64 4B54 4B50} 10+
> {4B66 0073 13B0} ;

ST: 00000032
RS: 2B0A:17B0 execute 2BFC:2AD8 interpretpad 3878:2BBE interpret
  {4B70 006A 13C0} 0020
  {4B74 4B62 4B5E} 12+
> {4B76 24EA 24E8} .
  {4B78 0073 13B0} ;
}}}