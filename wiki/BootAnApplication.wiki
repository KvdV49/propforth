#summary Make Application Start at Boot
#labels Phase-Implementation,Phase-QA,V4.5

= Make and Application Start at Boot AND run FORTH prompt  =

Context: QuickStart Board Demo

caskaz ported the Quickstart board touch sense button demo to propforth.  The application words is "demo"

prof_braino wants the button demo AND the forth prompt to run at power up


Sal has provided guidance

= Method 1 - the original question =

Preserve the original boot activity, and add new functionality that runs the demo at boot time.

Preserve the old "onboot" word by renaming it oldonboot, but trim the name down to "oldonb" so it fits in the same space.

{{{
c" onboot" find drop pfa>nfa 1+ c" oldonb" C@++ rot swap cmove
}}}

Make a word run_demo that calls demo and runs it on cog1

{{{
: run_demo c" demo" 1 cogx   ;  / call caskaz demo via run_demo on cog 1
}}}

At boot time, onboot is called. ONBOOT does the old onboot activity, then runs demo1, which starts the demo.

{{{
: onboot oldonb .demo  ;
}}}

= xxx =



{{{
: onboot oldonb 5 >con demo  ;   / calls caskz demo directly
}}}

should work and bring up the console on cog 5

= Method 2 =

{{{
: onboot oldonb c" demo" 1 cogx  ;
}}}

should be fine as well.

= Method 3 =

a simpler way:

{{{
: onreset1 onreset 100 delms demo ;
}}}

The delay is necessary, because cog 1 starts before cog 4, and demo issues a command to cog4.

= Method 4 - Full Solution =


or better yet, add this code to the source code.
When the source code is loaded, the application is saved to EEPROM and ready at the next boot:


{{{

: quickstart-demo1  \ runs on cog1

_LEDs 8 0 do dup pinout 1+ loop drop

begin
      0
        32 0 do
                glovalPads L@ or 
                dup _LEDs lshift outa COG@ ff00ffff and 
                or outa COG!
        loop
      drop
0 until

;

: demo4 clkfreq 100 u/ scan_pads ; \ runs on cog4

: onreset1 onreset demo1 ; \ when reset, start cog1 demo
: onreset4 onreset demo4 ; \ when reset, start cog4 demo

saveforth \ saves the current dictionary to EEPROM

}}}