#summary Options for an interface to the !LittleRobot

<wiki:toc max_depth="9" />

= NOTE =

This is in development.  This page is only to capture my notes during development and test.   The final app, if it makes it to release, will likely be different. 

= Introduction =

An important part of the !LittleRobot software is the user interface.  The user interface allow us to communicate with the robot, to tell is what to do and get reports its responses. 

= terminal interface =

The simplest user interface to the !LittleRobot is to use the !PropForth command line.  An sequences of forth words may be executed from the command line. A PC or laptop running a terminal program will be sufficient.  Typically, a !PropForth stem will b tethered to a PC via USB cable during development.

== Wired: TeraTerm ==

During development, it is recommended to use Teraterm or other terminal program.

== Wireless: BlueTerm ==

Blue Term is a free android app for Terminal over bluetooth.  It behave pretty much the same as a wired terminal setup.  With a clear line of sight on a clear day, Blueterm has functioned up to 100 feet.  Beyond the range of the bluetooth devices, the transfer rate decrease sharply, and errors begin to become noticiable, of course. 



= Application interface =

A final application will typically require a custom application interface.  Rather than the user choosing from the entire set of forth words, the application will present specific words in specific context, to perform a given application.  The goal is to make it simple for the user to send the necessary commends and receive back the required information. 


== Android App ==

The !LittleRobot Prroject includes plans for an Android App that packages functions for communicating with the !LittleRobot. 

Th Android app is expected to run java scripts, and generate code sequences to send to the bot.  It will also display information from the bot. The functionality relies on web support, so it seems the !LittleRobot Android app will require Android 3.x or greater.  The prototype has been demonstrated to function using Android 3.2 and Android 4.1


=== Set up: ===
  * Requires initializzed HCO05 (script to set name, baud, password, etc)
  * Pair HC05 with Android.
  * Load GREEN.apb, must be signed.

=== Configure  application ===

  *  Launch application 
  * Go to SETTINGS.  
  * verify CONNECT message.
  * Set [Turn on Bluetooth when started]
  * set [Connect Bluetooth when Started]
  * Set [Run Application:] and select TERMINAL (terminal.htm)
  * select [DONE]

=== using the app (preliminary) ===

  Select Terminal (DARK GREEN button) if is has not autostarted.

==== Execute a forth word interactively ====

In the LARGE INPUT FIELD, enter a forth word (ex st?)
Select button [SEND + CR] Observe that the forth word executed and the result was displayed on the android device

EX1: Type in
{{{
st?
}}}

Veriy the response:
{{{
ST:
Prop0 Cog6 ok
}}}

EX2: Type in
{{{
build?
}}}

See the response
{{{
Propforth v5.0 2012JAN09 14:30 0
Prop0 Cog6 ok
}}}

==== Execute from a MACRO ====

===== Define Macro =====

In the LARGE INPUT FIELD, enter a foth word (or any valid sequence of forth words) terminaled by \r (backslash and lower case r).  This will be the body of the macro that is executed.

* Example 1:

Set up a macro to display the stack stutus using the 'st?' word.

{{{
st?\r 
}}}

In the SMALL INPUT FIELD, put a Name for the MACRO.
{{{
ST?
}}}

Verify that a button labeled  'ST?' is now displayed

select the button 'ST?'

Verify the output 
{{{
st?
ST:

Prop0 Cog6 ok
}}}  

* Example 2:

Set up a macro to display the version string and build status using the 'build?' word

In the LARGE INPUT FIELD, enter 'build?\r'
{{{ 
build?\r
}}}

In the SMALL INPUT FIELD, put a Name for the MACRO.

{{{
version
}}}

Verify that a button labeled  'ST?' is now displayed

select the button 'version'

Verify the output 
{{{
build?

build_DevKernel 

Propforthv5.0 2012JAN09 14:30 0
Prop0 Cog6 ok
}}}  

===== Delete Macro =====



To Delete a Macro and remove the button, overwrite the macro with a blank definition. 

Blank out the LARGE INPUT FIELD.  The LARGE INPUT FIELD must be blank to remove a macro.

In the SMALL INPUT FIELD, enter the existing MACRO name as it appears on the macro button label.

Select [ADD MACRO]

Verify the Macro button of that name is no longer displayed. 

= Details =

This is still in progress.  It will likely change before release. 