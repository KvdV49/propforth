#summary LIDAR-Lite laser range finder

= Introduction =

LIDAR-Lite was introduced as a kickstarter. This was claimed to be the same performance as the $350 SF02 laser range finder.  Naturally, I was curious, and backed the project.  We can never have too many great sensors. 

However, I am sceptical.  There's no way.  If this does work I will be very pleased.  But the only was to test is side by side.  So here goes.

= LIDAR Lite I2C =


== Documentation ==

First let me say that the documentation for LIDAR Lite is nasty.  Of all the links on their web site this one

http://pulsedlight3d.com/pl3d/wp-content/uploads/2014/10/LIDAR-Lite-Operating-Manual.pdf

is the one one worth anything. 

Lidar Lite guys, please read your site, make the links work.   Thanks!

== I2C ==

LIDAR Lite is I2C or PWM.  While the SF02 can spit readings directly to your serial terminal application, the LIDAR-Lite MUST talk through an external microcontroller.   Fair enough, most folks are going to hook this up to an arduinl, etc. anyway.  But its slower getting started. 


LIDAR-Lite is an I2C slave. Host microcontroller (our Prop in our case) is I2C master.

=== I2C address ===

One part of the manual says I2C address is 0x84 another place says 0xC4. So is it 0x84 or 0xC4?  

=== write ===

Manual says: Measurement: Write register 0x00 with value 0x04 (This performs a DC stabilization cycle, Signal Acquisition, Data processing).
Refer to the section "I2C Protocol Summary‚Äù in this manual for more information about I2C Communications

=== poll ===

Manual says: Periodically poll the unit and wait until an ACK is received. The unit responds to read or write requests with a NACK when the sensor is busy processing a command or performing a measurement. (Optionally, wait approx. 20 milliseconds after acquisition and then proceed to read of high and low bytes)



=== read ===

Manual says:   Read: register 0x0f, returns the upper 8 bits of distance in cm, register 0x10, returns the lower 8 bits of distance in cm. 
(Optionally a 2 Byte read starting at 0x8f can be done) 

=== what it means ===

Here's wahts in the ardunio source code:

{{{
unsigned char LIDARLite_ADDRESSES[] = {0x62,0x42}; // Array of possible address for LIDAR-Lite Sensor
char LIDARLite_ADDRESS; // Variable to save the LIDAR-Lite Address when we find it in the array
}}}

The manual says:

The effective 8 bit I2C address is: 0xC4 write, 0xC5 read. 

This make more sense, or at least looks familiar to I2C.

= Sort this out =

We have been give a bunch of stuff.  Mostly hex values that could be I2C address or register address.

|| hex value || pssible meansing || comments ||
|| 0x00 || register||  load with 0x00 to initialize ||
|| 0x04 || init code || load into register 0x00 to init part ||
|| 0x0f || register  || upper 8 bits of distance in cm || 
|| 0x10 || register  || lower 8 bits of distance in cm || 
|| 0x8f || register  || 16 bits of distance in cm || 
|| 0x62 through 0x42 || Array of possible address for LIDAR-Lite Sensor || ??? ||
|| 0xC4 || I2C address write ||  0xC4 write ||
|| 0xC5  || I2C address write || 0xC5 read ||





= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages