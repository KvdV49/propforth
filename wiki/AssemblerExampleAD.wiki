#summary A/D in assembler for Propforth 5.0
#labels AD,v5.0,caskaz

= Introduction =

This page is an example of converting high level FORTH code into assembler.

The code is caskaz's contribution from 20120321

http://forums.parallax.com/showthread.php?138399-Propforth-5.0-is-available-for-download&p=1084006&viewfull=1#post1084006

= Hardware =

== prop board ==

This example can use any propforth board.

Quickstart and protoobard are used here

== Analog input circuit ==




= A/D code =

{{{
\ a cog special register
[ifndef ctra
h1F8	wconstant ctra
]
[ifndef frqa
h1FA	wconstant frqa 
]
[ifndef phsa
h1FC	wconstant phsa 
]

0 wconstant adcpin
1 wconstant fbpin

variable result

\ a_adc    A/D-conversion    ( result_addr  cycles  -- )
lockdict create a_adc forthentry
$C_a_lxasm w, h121  h113  1- tuck - h9 lshift or here W@ alignl h10 lshift or l,
z2WiZuB l, z1SyLI[ l, z2Wi[3B l, z1SyLI[ l, z2WiPak l, z20iP[V l, z3riP[V l, z2WiPiv l,
z24iPeE l, z20iPmD l, z8FPfW l, z1SV04P l, 0 l, 0 l,
freedict

: sigma_delta
1 frqa COG! fbpin dup pinout 9 lshift h24000000 or adcpin or ctra COG!         
\ A/D start
result 13880 a_adc
;

: adc
 c" sigma_delta" 5 cogx
 begin
     result L@ .  cr     
     10 delms             \ 10msec
 0 until
;

decimal
{
fl
hex
[ifndef phsa
h1FC	wconstant phsa 
]

\ sigma-delta A/D conversion
\ ( n1 n2 -- )  n1:result address  n2:cycles 
build_BootOpt :rasm
               \ read interval               
               mov  __interval , $C_stTOS
               spop
               \ read A/D result address
               mov  __result , $C_stTOS
               spop
               mov  $C_treg1 , cnt  
               add  $C_treg1 , __interval
__1
               waitcnt   $C_treg1 , __interval
               mov  $C_treg2 , phsa
               sub  $C_treg2 , $C_treg3
               add  $C_treg3 , $C_treg2 
               wrlong    $C_treg2 , __result
               jmp # __1                      
__interval
 0
__result
 0
;asm a_adc		
}
}}}


= The high level forth code =

= converting the forth code to assembler = 

----

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages