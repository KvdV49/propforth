#summary simple IDE complies and loads C code to the prop

= Introduction =

simpleIDE compiles and loads C code to to the prop.

The kalman filter code I received is in C.  I want to see if it works as-is before I try to mess with it in FORTH.

= Hardware =

PC - Linux Minut 17 -64

Propeller - Quickstart

= Software =

This should be fairly refined at this point. 

http://learn.parallax.com/propeller-c-set-simpleide

== download ==

I used 0.9.66 for Linux (64 bit i686)

I downloaded the instruction linked on the page, those are special in that the text has a carrage return after each letter.  Wonderful. 


== install ==

in a terminal window enter

{{{
sudo dpkg -i simpleide-0.6.99-amd64-debian-linux.deb
}}}

you will get errors, ignore them and type

{{{
sudo apt-get install -f
}}}

After this finsishes, add your user ID to the dialout group

{{{
sudo adduser ${USER} dialout
}}}

Powercycle so the changes take.

= START simple IDE first time from a command line =

You MUST start simple IDE from a terminal command line the first time or it will not work.  At least that's what I think I saw.

== SELECT the Defaults ==

The installer will suggest a path.  Do not change it or it will not work. 

The terminal window will show a bunch of messy debug messages, ignore these. 

The terminal window will show a bunch of error messages, [widget assert failed] ignore these as well. 

This is how it is expected to look.

Close the simple IDE window(s)

= Create a launcher Icon =

This is how its done in Mint 17, please adjust these steps if you use ubuntu, etc.

I created a launcher so I can click instead of type:

Right click on PANEL

select + Add To Panel

select Custom Application Launcher

Launcher Type: Application?

Name: simpleIDE

Command: Browse: (navigate to /usr/bin/simpleide ) 


= Launch and test = 

Launch the simple IDE application using either the command line or the launch icon

The Welcome.c program should be dispalyed in green in the main window.

The window title should display 

`/home/<userID>/Document/simpleIDE/My Project/Welcome.side`

== Connect the prop board ==

Connect the prop board.  If using a virtualbox setup, don't forget to select 

devices> USB device >  `FTDI FT232R USB UART [0600]`

The unlabeled field in the upper right of the window should automagically display 

{{{
/dev/ttyUSB0
}}}

if it does not, use the drop down list to select /dev/ttyUSB0


== run the example program ==

At the top of the window, select

Program >> Run with Terminal F8

After a bit, a blue window should open, and display Hello!

= changing projects, adding files =

SimpleIDE uses the concept of "project" in addition to files, to help organize the `*.c`, `*.h` and other file types.  Its just another file that organizes the other files.   Projects and file dependencies can take getting used to.   Ask somebody that uses C to help.  Since everybody has there own idea of "organized" there might not be one "best" method to organize.  

= END =