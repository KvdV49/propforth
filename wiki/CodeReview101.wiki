#summary The Code Review experiments for Propforth
#labels CodeReview,Phase-Implementation

= Introduction =

Code Review is the technique to get "another set of eyes" to look at the code. 

There are various studies freely available on the web that show the use and benefits of "Software Code Review". 

The goal is to ensure that the code is clear and concise, and does "what is supposed to do".

This ensures that the code is maintainable and usable.

The code review is potentially the documentation and educational material for each piece of software.  The previous reviewers started out at the same point you are now, and likely they had exactly the same questions you have.  If you have additional questions, ask them here and the answers can be added. 

This discussion uses the example of ANSI.f as the subject of the first example code review.  The most recent author is prof_braino (real name withheld due to previous issues with identity theft)

= Guidelines and Rules =

Please follow these guidelines and rules for code review.  If any guidelines or rules should be added, changed, or removed, please inform the team.  These rules and guidelines are intended to reflect the consensus of the team.

 == Rules =  

Can:

 Reviewers can ask for clarification on intent of any piece of code under review
 
 Reviewers can identify issues for other pieces of code (and trigger an new review on that code)

 Reviewers can state "I don't understand" or "I don't get it"  for any piece of code

 Reviewers can submit constructive criticism on any topic. "I do that differently, have you considered ...."

 Reviewers can disagree with the author implementation of the work.  "I don't think this will work, there will be a divide by zero in this case"

 Reviewers can disagree with the author documentation of the work.  "These comments are too much/too little for the complexity of this function,  please consider...."

 Author can accept or reject groups input at author's discretion.  Typically, the author makes the changes suggested by the groups (if this person asks for this, others probably will have a similar request). 

 Reviewers that have additional changes not implemented by the author are free to make any changes in their own private branch of the code.  These will not necessarily be included in the main Propforth packages.  (Examples are Hive and C3 branches).

Cannot:

 Participants cannot make derogatory statements about another participant's work 

 Participants cannot make a personal attack on participants.

 I.E. Any troll that makes intentionally hurtful statements such as "this code is stupid", or "you're stupid" will not be invited to participate.  

 == Guidelines ==

Guidelines for the code review process:

 Leader is usually the author

 Leader decides code is ready for review

 Leader prepares a review package (described below)

 Leader calls the review

 Leader invites participants 
 
 Leader negotiates and arranges times, dead lines so there is sufficient time to prepare.

 Participants commit to participate by accepting the review invitation 

 Participants prepare by reading the materials in advance of the review
 
 Participants prepare by writing questions about the materials in advance of the review

 Participants prepare by sending list of questions to Leader/Author in advance of the agreed upon deadline.  (i.e. "We'll get questions back to you by Tuesday")

Any reviews that do not adhere to these guidelines should be noted,  and the guidelines should be updated to describe what actually needs to happen.   

= Code Review Preparation =

 * The Leader/Author prepares the review package.
 * The Review package contains the items needed for the review as determined by the team.  
 * Typically the review package consists of:

 # The code under review
 # A statement of the function of the code
 # Prerequisites
 # Supporting references
 # Inputs
 # Processing
 # Outputs
 # Results/Side affects

-----
Example: Review Package for Code Review of ANSI.f 

Prerequisites: Hardware and software

 * ANSI terminal or ANSI terminal emulation program (teraterm or equivalent)
 * Propchip with RS232 or equivalent
 * Propforth v4.0x (in this case Propforth.spin is identical in Propforth4.0 and Propforth4.0a so either can be used)

  No addition hardware or software is identified

Supporting References: ANSI Escape sequences

 http://en.wikipedia.org/wiki/ANSI_escape_code 

 http://ascii-table.com/ansi-escape-sequences.php

 http://isthe.com/chongo/tech/comp/ansi_escapes.html

Code: 

 http://code.google.com/p/propforth/downloads/detail?name=ANSI%20Escape%20Sequences20101227-1535.f

Inputs:  

  * User character stream is entered via terminal program
  * Character steam contains text and ANSI escape sequences

Processing:

 * User text characters are interpreted as normal characters
 * ANSI Escape sequences are interpreted as control codes to the terminal

Outputs:

 * User Text is output to the terminal display screen
 * ANSI Escape sequences are used by the terminal display

Results/Side affects:

 * User text is displayed on the terminal display
 * ANSI Escape sequences affect the display according to ANSI Escape sequences referenced above.

 - text color and screen background are controlled

 - font and other attributes are control as supported by terminal 

-----
Example: Review Schedule for Code Review of ANSI.f 

*Code Review for ANSI.f invitation*

Requested participants
 * *Required*  `prof_braino`
 * *Required*  `caskaz`
 * *Required*  `BrianRiley`
 * _Optional_  `salsanci`
 * _optional_  `any other interested parties`  

Note: I specifically asked Brian and caskaz to participate in this experiment, and they both agreed.  In general, the review is open to any interested party, just send a message or comment if you wish to be listed on the invite list. 

ALSO NOTE: After the initial review,  any person can continue to ask questions on the code under review and receive answers.  This is how new participants can be brought up to speed on the various sections of code.

Please respond to accept or decline this invitation

Please respond indicating if 1 week is too little or too much to perform you part of the review.

Please prepare by reading the review materials by [1 week from last response]. It encouraged to respond earlier than the deadline.  The default time period is adjusted according to the experience, availability and timeliness of the participants.

Please prepare by submitting review questions to the Review Lead No Later than the Deadline date.   It encouraged to respond earlier than the deadline.  The default time period is adjusted according to the experience, availability and timeliness of the participants.

-----
Example: Review Responses for Code Review of ANSI.f 

*Code Review for ANSI.f invitation*

`     Requested participants -------- RESPONSE` 

 * *Required*  `prof_braino: ---- Will participate 2010-Dec-30`
 * *Required*  `caskaz: --------- <tentative agreement via email>`
 * *Required*  `BrianRiley: ----- <tentative agreement via email>`
 * _Optional_  `salsanci: -------- Sorry, out of town`
 * _optional_  `any other interested parties`:  


-----

Example: Review Responses for Code Review of ANSI.f 

*Code Review QUESTIONS for ANSI.f*


===Reviewer (A)===

 Question 1) line 18 - What is "esc"? 
 Answer to 1) 27 decimal 1B hex is that ascii character code for "escape".   As defined in the references.  Sending this byte to the terminal cuases the terminal to prepare for a ANSI escape code sequence.   Should this explanation be added to the code as a comment? (author says "yes")

 Question 2) Line 19 - What is "csi"?
 Answer to 2) 5B hex "[" is the second byte when there are more than two characters in the control sequence. Since this sequence is quite common in the words that follow, this was made as its own word.   Should this (or some other) explanation be added to the code as a comment? 

 Question 3) What are these terse comments in lines 6 through 16?  
 Answer to 3) These were the original comments in the code that author borrowed from salsanci as a starting point.  The section for ANSI support was commented out and not fully developed for desired purpose, so prof_braino took it out and made a separate extension (ANSI.f).  Should these be removed/changed? Please make suggestions. 


Question 4)  <not submitted yet> 


=== Reviewer (B)=== 

Question 1)   <not submitted yet> 

=== Reviewer (C)=== 

Question 1)   <not submitted yet> 


---- 

Example: Review Responses for Code Review of ANSI.f 

*Code Review for ANSI.f - Review Results

<none entered Review still open> 

----

Please use this review as the reference on the material under review. 

Questions about this material may be submitted after review is complete. If you have a question, ask it. Other folks have the same question, and everybody can benefit from the answer if it gets posted.  



End of page